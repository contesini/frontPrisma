{"version":3,"sources":["components/Layout/styles.js","graphql/mutations/user.js","duck/actions/userAction.js","duck/types/userType.js","duck/actions/authAction.js","duck/types/authType.js","components/Layout/Layout.jsx","config/menus.js","config/colors.js","components/FormInputs/FormInputs.jsx","components/CheckboxList.js","config/devices.js","components/HomeContent/styles.js","components/Dropzone/Dropzone.jsx","utils/utils.js","components/HomeContent/index.jsx","components/AuthComponent/AuthComponent.jsx","views/Home/Home.jsx","views/Login/styles.js","graphql/mutations/authentication.js","graphql/mutations/requestResetPassword.js","components/RequestResetPasswordDialog/RequestResetPasswordDialog.jsx","views/Login/Login.jsx","graphql/queries/user.js","components/ProfileContent/styles.js","components/Snackbar/index.js","components/ProfileContent/index.jsx","views/Profile/Profile.jsx","components/Hackathon/HackathonCard.jsx","graphql/queries/hackathons.js","duck/types/hackathonType.js","duck/actions/hackathonAction.js","components/Hackathon/HackathonList.jsx","views/Hackathons/Hackathons.jsx","graphql/mutations/hackathon.js","components/Hackathon/HackathonEdit/HackathonEdit.jsx","components/Hackathon/HackathonTermEdit/HackathonTermCard.jsx","graphql/mutations/terms.js","components/Hackathon/HackathonTermEdit/HackathonTermEdit.jsx","components/Hackathon/HackathonTermEdit/HackathonTermCreate.jsx","components/Hackathon/HackathonTermEdit/HackathonTermList.jsx","components/Hackathon/HackathonTabs/HackathonTabsOwner.jsx","components/hidden.jsx","components/Hackathon/HackathonButtonSubscribe.jsx","components/Hackathon/HackathonButtonUnsubscribe.jsx","components/Hackathon/HackathonInfo.jsx","components/Terms/TermsCollapseList.jsx","components/Awards/AwardsCollapseList.jsx","components/Hackathon/HackathonTabs/HackathonTabsParticipant.jsx","components/Hackathon/HackathonTabs/HackathonTabs.jsx","views/Hackathons/Details/HackathonDetails.jsx","views/Hackathons/Edit/HackathonEdit.jsx","components/Squad/CardSquad.jsx","views/Squads/Squads.jsx","views/Awards/Awards.jsx","views/Terms/Terms.jsx","views/Reports/Reports.jsx","views/Register/styles.js","views/Register/Register.jsx","views/Configurations/Configurations.jsx","graphql/mutations/changePassword.js","views/ChangePasswordView/ChangePasswordView.jsx","config/routes.js","graphql/client.js","config/enviroment.js","duck/reducers/authReducer.js","duck/reducers/userReducer.js","duck/reducers/termReducer.js","duck/reducers/hackathonReducer.js","duck/rootReducer.js","duck/types/termType.js","App.jsx","serviceWorker.js","index.js"],"names":["styles","theme","withMenu","colors","logoStyle","paddinTopMenu","backgroundColor","root","display","height","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","color","hide","flexShrink","whiteSpace","drawerOpen","paddingLeft","spacing","menu","textMenuOnDrawerOpen","drawerClose","overflowX","breakpoints","up","textMenuOnDrawerClose","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","paddingTop","GetUserByToken","gql","CreateUser","UpdateUser","setUser","data","type","payload","subscribeUserHackathon","authenticate","undefined","token","errors","message","checkToken","dispatch","logout","navigate","connect","state","bindActionCreators","props","withAppBar","menus","textTopMenu","logo","logoTxt","withLogout","useStyles","makeStyles","useTheme","classes","useState","open","setOpen","Inbox","openSubmenu","setOpenSubmenu","handleSubmenu","pressed","map","name","url","submenus","length","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Fragment","Typography","variant","noWrap","alt","src","Button","Drawer","paper","direction","Divider","List","key","ListItem","button","ListItemIcon","icon","ListItemText","primary","submenu","Collapse","in","timeout","unmountOnExit","component","style","nested","FieldGroup","useForm","register","handleSubmit","getValues","youAre","setState","expertises","setExpertises","firstLoadValueMultiple","setFirstLoadValueMultiple","selectedDate","handleDateChange","handleChange","event","target","value","setMultipleSelect","setSelect","useEffect","defaultValueMultiple","defaultValueSelect","defaultValueDateStart","setDate","defaultValueDateEnd","FormControl","Select","onChange","defaultValue","input","TextField","select","margin","required","id","label","autoFocus","InputLabelProps","shrink","options","option","MenuItem","validateMessage","multiple","validation","multiline","rows","disabled","inputRef","utils","DateFnsUtils","DateTimePicker","ampm","showTodayButton","format","inputVariant","e","moment","fullWidth","error","Object","keys","repeatPassword","FormInputs","row","i","ncols","push","Grid","item","xs","sm","Number","lg","xl","properties","container","maxWidth","palette","background","CheckboxList","React","checked","setChecked","handleToggle","currentIndex","indexOf","console","log","newChecked","splice","setInitialOptions","title","labelId","role","dense","Checkbox","tabIndex","disableRipple","inputProps","ListItemSecondaryAction","alert","size","styled","div","form","h1","footer","thumb","borderRadius","border","marginBottom","boxSizing","thumbInner","minWidth","overflow","img","Dropzone","files","setFiles","useDropzone","accept","onDrop","acceptedFiles","file","image","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","forEach","revokeObjectURL","toBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","instructions","marginTop","Content","activeStep","setActiveStep","Set","skipped","setSkipped","initialOptions","steps","isStepOptional","step","isStepSkipped","has","Stepper","index","stepProps","labelProps","optional","completed","Step","StepLabel","JSON","stringify","getStepContent","prevActiveStep","newSkipped","values","delete","auth","checkedToken","useMutation","onCompleted","resp","getUserByToken","onError","localStorage","setItem","getItem","variables","split","children","active","spinner","text","user","HomeContent","Title","Form","Error","h4","Authentication","REQUEST_RESET_PASSWORD","RequestResetPasswordDialog","email","requestResetPassword","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","preventDefault","DialogActions","LoginContent","errorAuth","setErrorAuth","loading","setLoading","graphQLErrors","authentication","Container","onSubmit","formData","password","pattern","href","Box","mb","CircularProgress","disableShrink","GetUserById","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","green","dark","main","amber","fontSize","iconVariant","opacity","SnackbarContentWrapper","other","Icon","SnackbarContent","aria-describedby","action","setImage","validateExpertises","isLoading","setIsLoading","openSnackBar","setOpenSnackBar","mode","setValue","updateUser","mountObjectToSubmit","userToUpdate","field","a","avatar","getUser","useQuery","expertise","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","reg","ref","CardHackathon","description","slice","Card","card","ButtonBase","CardActionArea","CardHeader","gutterBottom","CardMedia","media","CardContent","pt","fontWeight","pb","pl","participants","withStyles","cardActionArea","getHackathons","GET_TERM_BY_HACKATHON_ID","GET_HACKATHON_BY_ID","changeHackathon","hackathonType","setHackathon","hackathons","hackathon","justify","minHeight","HackathonCard","SUBSCRIBE_HACKATHON","UNSUBSCRIBE_HACKATHON","UPDATE_HACKATHON","Date","startDate","setStartDate","validateStart","setValidateStart","validateEnd","endDate","setEndDate","updateHackathon","start","end","mountHackatonToUpdate","submited","hackathonToUpdate","CardHackathonTerm","termProps","flexDirection","m","setTerm","setViewTerm","UPDATE_TERM","CREATE_TERM","EditorState","createEmpty","editorState","setEditorState","updateTerm","term","updateEditorFromHtml","getHtmlFromProps","contentBlocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","createWithContent","draftToHtml","convertToRaw","getCurrentContent","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","handleEditorState","setTerms","terms","createTerm","refetch","viewTerm","useForceUpdate","TabPanel","hidden","p","a11yProps","tabs","borderRight","divider","tabPanel","HackathonTabsOwner","Tabs","orientation","newValue","Tab","heading","typography","pxToRem","fontWeightRegular","hackathonId","participantId","subscribeHackathon","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","unsubscribeHackathon","HackathonInfo","isSubscribe","filter","participant","Paper","mt","squads","TermsCollapseList","AwardCollapseList","award","checkUserIsInSquad","squad","isInSquad","disableAward","disableTerm","indicatorColor","textColor","scrollButtons","AwardsCollapseList","createdHackathon","created","isHackathonCreator","window","history","pushState","CardActions","SquadsContent","de3cription","AwardsContent","TermsContent","ReportsContent","data2","RegisterContent","setValidateYouAre","setValidateExpertises","setError","createUser","usr","ConfigurationsContent","CHANGE_PASSWORD","ChangePassword","changePassword","cols","changeTextValue","ChangePasswordView","routes","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","ApolloClient","link","concat","cache","InMemoryCache","INITIAL_STATE","maxParticipants","rootReducer","combineReducers","removeItem","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","applyMiddleware","multi","thunk","promise","createStore","reducers","App","routeResult","useRoutes","client","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9bc1fc6b.chunk.js","sourcesContent":["const drawerWidth = 240;\nexport const styles = (theme, withMenu, colors, logoStyle, paddinTopMenu, backgroundColor) => {\n    return {\n        root: {\n            display: 'flex',\n            backgroundColor: backgroundColor,\n            height: '100vh'\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            backgroundColor: colors.appBar\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n            color: colors.menuButton\n        },\n        hide: {\n            display: 'none',\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n            whiteSpace: 'nowrap'\n        },\n        drawerOpen: {\n            width: !withMenu ? 0 : drawerWidth,\n            paddingLeft: theme.spacing(1),\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            backgroundColor: colors.menu,\n            color: colors.textMenuOnDrawerOpen\n        },\n        drawerClose: {\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            overflowX: 'hidden',\n            width: theme.spacing(7) + 1,\n            [theme.breakpoints.up('sm')]: {\n                width: !withMenu ? '0px' : theme.spacing(9) + 1,\n            },\n            paddingLeft: !withMenu ? '0px' : theme.spacing(1),\n            backgroundColor: colors.menu,\n            color: colors.textMenuOnDrawerClose\n        },\n        toolbar: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n            paddingTop: paddinTopMenu\n        },\n        logoStyle: logoStyle,\n        paddinTopMenu: {\n            paddingTop: paddinTopMenu\n        }\n    }\n}\n","import { gql } from 'apollo-boost';\n\nexport const GetUserByToken = gql`\nmutation($token: String!) {\n  getUserByToken(token: $token) {\n    id\n    name\n    email\n    type\n    expertise\n    squads {\n      id\n    }\n    participant {\n      id\n    }\n    createdHackathon {\n      id\n    }\n  }\n}\n\n`\nexport const CreateUser = gql`\nmutation(\n    $name: String!\n    $email: String!\n    $password: String!\n    $type: UserType!\n    $avatar: String\n    $expertise: [UserExpertiseType!]!\n  ) {\n    createUser(\n      data: { avatar: $avatar, name: $name, email: $email, password: $password, type: $type, expertise: {set: $expertise}}\n    ) {\n      id\n      name\n      email\n      type\n      expertise\n    }\n  }  \n`\nexport const UpdateUser = gql`\nmutation ($name: String, $password: String, $expertise: [UserExpertiseType!]!, $id: ID!){\n  updateUser(data: {\n    name: $name\n    expertise: {set: $expertise}\n    password: $password\n  }, where: {id: $id})\n  {\n    id\n    name\n    expertise\n  }\n}\n`\n","import * as USER_TYPES from '../types/userType'\n\nexport const setUser = (data) => {\n    return {\n        type: USER_TYPES.SET_USER,\n        payload: data\n    }\n}\n\nexport const subscribeUserHackathon = (data) => {\n    return {\n        type: USER_TYPES.USER_SUBSCRIBE_HACKATHON,\n        payload: data\n    }\n}\n\n","export const SET_USER = 'SET_USER';\n\nexport const USER_SUBSCRIBE_HACKATHON = 'USER_SUBSCRIBE_HACKATHON';","import * as AUTH_TYPES from '../types/authType';\nimport * as userTypes from '../types/userType';\nimport * as userActions from './userAction';\nimport { navigate } from 'hookrouter';\nexport const authenticate = (data) => {\n    if (data.authenticate !== undefined && data.authenticate.token !== undefined) {\n        return {\n            type: AUTH_TYPES.AUTHENTICATED,\n            payload: data.authenticate.token\n        }\n    } else {\n        if (data.authenticate.errors) {\n            return {\n                type: AUTH_TYPES.ERROR,\n                payload: data.authenticate.errors.message\n            }\n        }\n    }\n\n}\nexport const checkToken = (data) => {\n    if (data.errors) {\n        return {\n            type: AUTH_TYPES.IS_VALID_TOKEN,\n            payload: false\n        }\n    }\n\n    return dispatch => {\n        dispatch({\n            type: AUTH_TYPES.IS_VALID_TOKEN,\n            payload: true\n        })\n        dispatch({\n            type: userTypes.SET_USER,\n            payload: data\n        })\n    }\n}\nexport const logout = () => {\n    navigate('/login')\n    return ({\n        type: AUTH_TYPES.LOGOUT\n    }\n    );\n}","export const AUTHENTICATED = 'AUTHENTICATED';\nexport const LOGOUT = 'LOGOUT';\nexport const IS_VALID_TOKEN = 'IS_VALID_TOKEN';\nexport const ERROR = 'ERROR';","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { styles } from './styles';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Collapse from '@material-ui/core/Collapse';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport { useMutation } from '@apollo/react-hooks';\nimport { getUserByToken } from '../../graphql/mutations/user'\nimport { bindActionCreators } from 'redux'\nimport { checkToken } from '../../duck/actions/authAction'\nimport { navigate } from 'hookrouter'\nimport { connect } from 'react-redux'\nimport { logout } from '../../duck/actions/authAction'\n//import { menus, withMenu, textTopMenu } from '../../config/menus';\n//import { withAppBar } from '../../config/appBar';\n\nexport function Layout(props) {\n    const { withAppBar, menus, withMenu, textTopMenu, colors, content, logo, logoStyle, logoTxt, paddinTopMenu, backgroundColor, withLogout } = props;\n    const useStyles = makeStyles(theme => styles(theme, withAppBar, colors, logoStyle, paddinTopMenu, backgroundColor));\n    const theme = useTheme();\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [openSubmenu, setOpenSubmenu] = useState({\n        Inbox: false\n    });\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    }\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    }\n    const handleSubmenu = (pressed) => {\n        setOpenSubmenu({\n            ...openSubmenu,\n            [pressed]: !openSubmenu[pressed]\n        })\n        menus.map(menu => {\n            if (menu.name == pressed && menu.url !== '' && menu.submenus.length === 0) {\n                navigate(menu.url)\n            }\n        })\n        return true;\n    }\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            {withAppBar ?\n                <AppBar\n                    position=\"fixed\"\n                    className={clsx(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar>\n                        {menus.length && withMenu > 0 ?\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"open drawer\"\n                                onClick={handleDrawerOpen}\n                                edge=\"start\"\n                                className={clsx(classes.menuButton, {\n                                    [classes.hide]: open,\n                                })}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                            :\n                            <React.Fragment />\n                        }\n                        <Typography variant=\"h6\" noWrap>\n                            {logo ? <React.Fragment>\n                                <img alt={logoTxt} className={classes.logoStyle} src={logo} />\n                            </React.Fragment>\n                                : logoTxt}\n                        </Typography>\n                        {withLogout ?\n                            <Button color=\"inherit\" onClick={() => props.logout()}>Logout</Button>\n                            :\n                            <React.Fragment />\n                        }\n\n                    </Toolbar>\n                </AppBar>\n                :\n                <React.Fragment />\n            }\n\n            {menus.length && withMenu > 0 ?\n                <Drawer\n                    variant=\"permanent\"\n                    className={clsx(classes.drawer, {\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    })}\n                    classes={{\n                        paper: clsx({\n                            [classes.drawerOpen]: open,\n                            [classes.drawerClose]: !open,\n                        }),\n                    }}\n                    open={open}\n                >\n                    <div className={classes.toolbar}>\n                        <Typography >{textTopMenu}</Typography>\n                        <IconButton onClick={handleDrawerClose}>\n                            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                        </IconButton>\n                    </div>\n                    <Divider />\n\n                    <List className={classes.paddinTopMenu}>\n                        {\n                            menus.map((menu, key) => {\n\n                                return (\n                                    <React.Fragment key={menu.key}>\n                                        <ListItem button onClick={() => { handleSubmenu(menu.name) }} >\n                                            <ListItemIcon><Icon>{menu.icon}</Icon></ListItemIcon>\n                                            <ListItemText primary={menu.name} />\n                                        </ListItem>\n                                        <React.Fragment>\n                                            {menu.submenus.map((submenu, key) => {\n                                                return (\n                                                    <Collapse in={openSubmenu[menu.name]} timeout=\"auto\" unmountOnExit key={submenu.name}>\n                                                        <List component=\"div\" style={{ paddingLeft: submenu.padding }}>\n                                                            <ListItem button onClick={() => { navigate(submenu.url) }} className={classes.nested}>\n                                                                <ListItemIcon>\n                                                                    <Icon>{submenu.icon}</Icon>\n                                                                </ListItemIcon>\n                                                                <ListItemText primary={submenu.name} />\n                                                            </ListItem>\n                                                        </List>\n                                                    </Collapse>\n                                                );\n                                            })\n                                            }\n                                        </React.Fragment>\n\n                                    </React.Fragment>\n                                )\n                            })\n                        }\n                    </List>\n                </Drawer>\n                :\n                <React.Fragment />\n            }\n\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {content}\n            </main>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ logout }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout)\n\n\n\n","/*\nhttps://material.io/resources/icons/?style=baseline\n\n{\n        name: 'Home',\n        url: '',\n        icon: 'mood',\n        submenus: [\n              {\n                name: 'My Hackathons',\n                icon: 'weekend',\n                url: '/my-hackathons',\n                padding: 10\n            },\n            {\n                name: 'submenu2',\n                icon: 'weekend',\n                padding: 10\n            }\n        ]\n    }\n\n*/\nexport const menus = [\n    {\n        name: 'Profile',\n        key: 1,\n        url: '/profile',\n        icon: 'emoji_emotions',\n        submenus: []\n    },\n    {\n        name: 'Hackathons',\n        key: 2,\n        url: '/hackathons',\n        icon: 'whatshot',\n        submenus: []\n    }\n]","export const colors = {\n    appBar: '#17182b',\n    menu: '',\n    textMenuOnDrawerOpen: 'TEXTO',\n    textMenuOnDrawerClose: '',\n    menuButton: ''\n}","import React, { useState, useEffect } from 'react';\nimport FormGroup from '@material-ui/core/FormGroup/index';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/Input';\nimport useForm from 'react-hook-form';\nimport { TextField, Select, MenuItem, OutlinedInput } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { \n  DateTimePicker,\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\n\nimport { getDefaultValues } from 'apollo-utilities';\nimport * as moment from 'moment';\n// import { Container } from './styles';\nfunction FieldGroup(props) {\n    const { register, handleSubmit, errors, getValues } = useForm();\n    const [state, setState] = useState({ youAre: '' });\n    const [expertises, setExpertises] = useState([]);\n    const [firstLoadValueMultiple, setFirstLoadValueMultiple] = useState([]);\n    const [selectedDate, handleDateChange] = useState();\n    const handleChange = data => event => {\n        if (data.type === 'select-multiple') {\n            setExpertises(event.target.value)\n            data.setMultipleSelect(event.target.value)\n            setFirstLoadValueMultiple(event.target.value)\n\n        } else {\n\n            data.setSelect(event.target.value)\n        }\n        setState({\n            ...state,\n            [data.name]: event.target.value,\n        });\n    };\n    useEffect(() => {\n\n        if (props.defaultValueMultiple && firstLoadValueMultiple.length === 0) {\n            setFirstLoadValueMultiple(props.defaultValueMultiple)\n            setExpertises(props.defaultValueMultiple)\n        }\n        if (props.defaultValueSelect) {\n            setState({ youAre: props.defaultValueSelect })\n        }\n        if (props.defaultValueDateStart) {\n           handleDateChange(props.defaultValueDateStart)\n           props.setDate(props.defaultValueDateStart)\n        }\n        if (props.defaultValueDateEnd) {\n           handleDateChange(props.defaultValueDateEnd)\n           props.setDate(props.defaultValueDateEnd)\n        }\n\n\n    }, [props, expertises])\n    \n    return (\n\n        <FormGroup>\n            <FormControl>\n                {props.type === 'select' ?\n                    <React.Fragment>\n                        <Select\n                            onChange={handleChange(props)}\n                            value={props.defaultValue ? setState({ youAre: props.defaultValue }) : state.youAre}\n                            name={props.name}\n                            input={<TextField\n                                select\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required={props.required}\n                                id={props.name}\n                                label={props.label}\n                                name={props.name}\n                                autoFocus\n                                type={props.type}\n                                defaultValue={state.youAre}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            >\n                                {props.options.map(option => {\n                                    return (<MenuItem value={option}>{option}</MenuItem>);\n                                })}\n\n\n                            </TextField>}\n                        >\n                            {props.options.map(option => {\n                                return (<MenuItem value={option}>{option}</MenuItem>);\n                            })}\n\n                        </Select>\n                        {props.validateMessage !== \"\" && props.name == 'youAre' ? <span style={{ color: 'red' }}>{props.validateMessage}</span> : \"\"}\n                    </React.Fragment>\n                    :\n                    props.type === 'select-multiple' ?\n                        <React.Fragment>\n                            <Select\n                                multiple\n                                onChange={handleChange(props)}\n                                value={expertises}\n                                name={props.name}\n                                input={<TextField\n                                    select\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required={props.validation && props.validation.required ? true : false}\n                                    id={props.name}\n                                    label={props.label}\n                                    name={props.name}\n                                    autoFocus\n                                    type={props.type}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                >\n                                    {props.options.map((option) => {\n                                        return (<MenuItem value={option} key={option}>{option}</MenuItem>);\n                                    })}\n\n\n                                </TextField>}\n                            >\n                                {props.options.map(option => {\n                                    return (<MenuItem value={option} key={option}>{option}</MenuItem>);\n                                })}\n\n                            </Select>\n                            {props.validateMessage !== \"\" && props.name == 'expertise' ? <span style={{ color: 'red' }}>{props.validateMessage}</span> : \"\"}\n                        </React.Fragment>\n                        :\n                        props.type === 'text-area' ?\n                            <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            multiline\n                            rows={props.rows}\n                            id={props.name}\n                            label={props.label}\n                            name={props.name}\n                            autoFocus\n                            type={props.type}\n                            disabled={props.disabled}\n                            inputRef={props.inputRef(props.validation)}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                         :\n                         props.type ==='date-time' ?\n                         <React.Fragment>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                 <DateTimePicker\n                                 ampm={false}\n                                 showTodayButton\n                                 format=\"dd/MM/yyyy HH:mm\"\n                                    label={props.label}\n                                    inputVariant=\"outlined\"\n                                    value={selectedDate}\n                                    onChange={(e)=>{\n                                        handleDateChange(e)\n                                        props.setDate(moment(e).format(\"YYYY-MM-DDThh:mm:ss.sssZ\"))\n                                    }}\n                                  />\n                            </MuiPickersUtilsProvider>\n                         </React.Fragment>\n                         :\n                          props.type ==='date' ?\n                         <React.Fragment>\n                            \n                         </React.Fragment>\n                         :\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id={props.name}\n                            label={props.label}\n                            name={props.name}\n                            autoFocus\n                            type={props.type}\n                            disabled={props.disabled}\n                            inputRef={props.inputRef(props.validation)}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                }\n                {props.error && Object.keys(props.error).length > 0 ?\n                    props.error && props.error.repeatPassword ?\n                        <span style={{ color: 'red' }}>{props.error[props.name] && 'This field is different from password'}</span>\n                        :\n                        <span style={{ color: 'red' }}>{props.error[props.name] && props.error[props.name].message}</span>\n                    :\n                    \"\" \n                }\n\n            </FormControl>\n        </FormGroup >\n    );\n}\nconst FormInputs = (props) => {\n    var row = [];\n    for (var i = 0; i < props.ncols.length; i++) {\n        row.push(\n\n            <Grid item xs={12} sm={Number(props.ncols[i])} lg={Number(props.ncols[i])} xl={Number(props.ncols[i])} key={props.properties[i].id} >\n                <FieldGroup {...props.properties[i]} />\n            </Grid>\n\n        );\n\n    }\n    return (\n        <Grid container spacing={3} >\n            {row}\n        </Grid>\n    );\n\n};\n\nexport default FormInputs;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function CheckboxList(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    console.log(currentIndex)\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n    props.setInitialOptions(newChecked);\n  };\n  const data = [\n  {key:0,title:\"Aviso Prévio\", content:\"Quando uma das partes deseja finalizar o contrato de traba.\"},\n  {key:1,title:\"Multa do Artigo nº477 da CLT\", content:\"Quando uma das partes deseja finalizar o contrato de traba.\"},\n  {key:2,title:\"Multa de 40% do FGTS\", content:\"Quando uma das partes deseja finalizar o contrato de traba.\"},\n  {key:3,title:\"Multa do Artigo nº 467 CLT\", content:\"Quando uma das partes deseja finalizar o contrato de traba.\"},\n  {key:4,title:\"Férias Proporcionais / Vencidas\", content:\"Quando uma das partes deseja finalizar o contrato de traba.\"},\n  {key:5,title:\"13º Salário Proporcional / Vencido\", content:\"Quando uma das partes deseja finalizar o contrato de traba.\"},\n  {key:6,title:\"Saldo do Salário\", content:\"Quando uma das partes deseja finalizar o contrato de traba.\"},\n  ]\n  return (\n    <List >\n      {data.map(value => {\n        const labelId = `checkbox-list-label-${value.key}`;\n\n        return (\n          <ListItem key={value.key} role={undefined} dense button onClick={handleToggle(value.key)}>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(value.key) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': labelId }}\n              />\n            </ListItemIcon>\n            <div>\n              <h1>{value.title}</h1>\n              <p>{value.content}</p>\n            </div>\n            <ListItemSecondaryAction onClick={()=>alert('OK')}>\n              <IconButton edge=\"end\" aria-label=\"comments\">\n                <CommentIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","const size = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '768px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px'\n}\nexport const device = {\n    mobileS: `(min-width: ${size.mobileS})`,\n    mobileM: `(min-width: ${size.mobileM})`,\n    mobileL: `(min-width: ${size.mobileL})`,\n    tablet: `(min-width: ${size.tablet})`,\n    laptop: `(min-width: ${size.laptop})`,\n    laptopL: `(min-width: ${size.laptopL})`,\n    desktop: `(min-width: ${size.desktop})`,\n    desktopL: `(min-width: ${size.desktop})`\n};","import styled from 'styled-components';\nimport { device } from '../../config/devices';\nexport const Center = styled.div`\n  display: flex;\n  flex-direction: column\n  width:50vw;\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n`;\nexport const Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: #554433\n  width:100%;\n`;\nexport const StyledDropZone = styled.div`\n  margin: 10;\n  width: 15vw;\n  height: 35vh;\n  border: 2px solid #c6c6c6;\n  border-style: dashed;\n`;\nexport const Footer = styled.footer`\ndisplay: flex;\n  margin-top: 2vh;\n  width: 95vw;\n  height: 5vh;\n  border: 2px solid #c6c6c6;\n  border-style: dashed;\n  background-color: #e6e6e6;\n  justify-content: center;\n  font-weight: bold;\n`\n","import React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Button from '@material-ui/core/Button';\nimport useForm from 'react-hook-form';\nconst thumb = {\n    display: 'inline-flex',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    width: 200,\n    height: 200,\n    padding: 4,\n    boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n    display: 'flex',\n    minWidth: 0,\n    overflow: 'hidden'\n};\n\nconst img = {\n    width: 200,\n    height: 200\n};\n\n\nfunction Dropzone(props) {\n    const [files, setFiles] = useState([]);\n    const { getRootProps, getInputProps } = useDropzone({\n        accept: 'image/*',\n        onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => {\n                console.log(file)\n                props.image(file);\n                return Object.assign(file, {\n                    preview: URL.createObjectURL(file)\n                })\n            }\n            ));\n\n        }\n    });\n    let thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n            <div style={thumbInner}>\n                <img\n                    src={file.preview}\n                    style={img}\n                />\n            </div>\n        </div>\n    ));\n\n    useEffect(() => () => {\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n\n    return (\n        <React.Fragment>\n            {files.length > 0 ? <Button onClick={() => { setFiles([]); props.image(\"\"); }}>Remove Avatar</Button> : <React.Fragment />}\n            <div style={{ border: '2px dotted #c6c6c6', width: 200, height: 200 }} {...getRootProps()}>\n                {files.length > 0 ?\n                    <div>\n                        <input id=\"avatar\" name=\"avatar\"  {...getInputProps()} />\n                        {thumbs}\n\n                    </div>\n                    :\n                    <div>\n                        <input id=\"avatar\" name=\"avatar\" {...getInputProps()} />\n                        <p >Drag 'n' drop the avatar here, or click to select</p>\n                    </div>\n                }\n\n            </div>\n        </React.Fragment>\n    );\n}\nexport default Dropzone;","export const toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n});\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport Layout from '../../components/Layout/Layout';\nimport { menus } from '../../config/menus';\nimport { colors } from '../../config/colors'\nimport useForm from 'react-hook-form';\nimport Input from '@material-ui/core/Input';\nimport FormInputs from '../../components/FormInputs/FormInputs';\nimport CheckboxList from '../../components/CheckboxList';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { Title, Center, Form } from './styles';\nimport { FormControlLabel, Checkbox, CircularProgress } from '@material-ui/core';\nimport { navigate } from 'hookrouter';\nimport { useMutation } from '@apollo/react-hooks';\nimport { authenticate } from '../../duck/actions/authAction'\nimport { CreateUser } from '../../graphql/mutations/user'\nimport Dropzone from '../../components/Dropzone/Dropzone';\nimport { toBase64 } from '../../utils/utils';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport {Stepper, Paper} from '@material-ui/core';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst Content = (props) => {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [initialOptions, setInitialOptions] = useState([]);\n  const getSteps = () => {\n  return ['O que é verba recisória?', 'Você quer conferir quais verbas?', 'Estimativa de valor', 'Tem interesse em entrar com um processo judicial?'];\n}\n  const steps = getSteps();\n\n  const  isStepOptional = (step) => {\n    return step === 1;\n  }\n  \n\nconst getStepContent = (step) => {\n  switch (step) {\n    case 0:\n      return <React.Fragment>\n      <p>O que são verbas recisórias</p>\n      </React.Fragment>\n    case 1:\n      return <React.Fragment>\n      <p>{JSON.stringify(initialOptions)}</p>\n         <CheckboxList setInitialOptions={setInitialOptions} />\n      </React.Fragment>\n    case 2:\n      return 'This is the bit I really care about!';\n      case 3:\n      return 'Sim';\n    default:\n      return 'Unknown step';\n  }\n}\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  }\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  }\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  }\n\n  const handleReset = () => {\n    setActiveStep(0);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n             {navigate('/register')}\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Voltar\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Sim' : 'Avançar'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\nconst Register = (props) => {\n    return (<Layout\n        backgroundColor=\"\"\n        withAppBar={false}\n        menus={menus}\n        withMenu={false}\n        paddinTopMenu=\"5vh\"\n        colors={colors}\n        textTopMenu=\"Register\"\n        logo=\"https://www.trzcacak.rs/myfile/full/316-3169204_angry-panda-logo.png\"\n        logoTxt=\"Panda\"\n        logoStyle={{ width: '10%', height: '20%' }}\n        withLogout={false}\n        content={<Content {...props} />}\n\n    />);\n}\n\nconst mapStateToProps = state => ({\n    token: state.auth.token\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ authenticate }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { GetUserByToken } from '../../graphql/mutations/user'\nimport { bindActionCreators } from 'redux'\nimport { checkToken } from '../../duck/actions/authAction'\nimport { navigate } from 'hookrouter'\nimport { connect } from 'react-redux'\nimport LoadingOverlay from 'react-loading-overlay';\nconst AuthComponent = (props) => {\n    const [checkToken, { data }] = useMutation(GetUserByToken, {\n        onCompleted: (resp) => props.checkToken(resp.getUserByToken),\n        onError: (error) => { localStorage.setItem('token', \"\"); }\n    })\n    useEffect(() => {\n        if (localStorage.getItem('token') !== \"\" && localStorage.getItem('token') !== null) {\n            checkToken({ variables: { token: localStorage.getItem('token').split(' ')[1] } });\n        } else {\n            navigate('/login')\n        }\n    }, [props.checkedToken])\n    if (props.checkedToken) return props.children\n    return <LoadingOverlay active={true} spinner text='Loading...' ><div style={{width:'100vw',height:'100vh'}}></div></LoadingOverlay>\n}\nconst mapStateToProps = state => ({\n    checkedToken: state.auth.checkedToken\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ checkToken }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthComponent)\n\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { navigate } from 'hookrouter'\nimport Layout from '../../components/Layout/Layout';\nimport { menus } from '../../config/menus';\nimport { colors } from '../../config/colors';\nimport { useMutation } from '@apollo/react-hooks';\nimport { GetUserByToken } from '../../graphql/mutations/user';\nimport { checkToken } from '../../duck/actions/authAction';\nimport { CircularProgress, Container } from '@material-ui/core';\nimport { setUser } from '../../duck/actions/userAction';\nimport HomeContent from '../../components/HomeContent';\nimport LoadingOverlay from 'react-loading-overlay';\nimport AuthComponent from '../../components/AuthComponent/AuthComponent'\nconst Home = (props) => {\n   return (\n            <Layout\n                withAppBar={true}\n                menus={menus}\n                withMenu={false}\n                paddinTopMenu=\"4vh\"\n                colors={colors}\n                textTopMenu={props.user.name}\n                logo=\"https://www.pinclipart.com/picdir/middle/1-11384_lawyer-clipart-law-firm-justia-png-transparent-png.png\"\n                logoTxt=\"Panda\"\n                withLogout={true}\n                logoStyle={{ width: '5%', height: '10%' }}\n                content={<HomeContent />}\n            />\n   );    \n}\nconst mapStateToProps = state => ({\n    checkedToken: state.auth.checkedToken,\n    user: state.user.user\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ checkToken, setUser }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: #554433\n  width:100%;\n`;\nexport const Center = styled.div`\n  display: flex;\n  flex-direction: column\n  width:100%;\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  width: 50%;\n`;\nexport const Error = styled.h4`\n color: red;\n font-weight: bold;\n`;","import { gql } from 'apollo-boost';\n\nexport const Authentication = gql`\n    mutation($email: String!, $password: String!) {\n        authenticate(email: $email, password: $password) {\n            token\n        }\n    }\n`","import gql from \"graphql-tag\";\n\nexport const REQUEST_RESET_PASSWORD = gql`\n    mutation ($email: String!){\n        requestResetPassword(email: $email){\n            isUserRegistered\n        }\n    }\n`","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { REQUEST_RESET_PASSWORD } from '../../graphql/mutations/requestResetPassword'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst RequestResetPasswordDialog = () => {\n  const [open, setOpen] = React.useState(false);\n  let email = '';\n\n  const [requestResetPassword, { data }] = useMutation(REQUEST_RESET_PASSWORD)\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  const handleSubmit = () => {\n    if (email) {\n      requestResetPassword({ variables: { email } })\n      handleClose()\n    }\n  }\n\n  const changeTextValue = (event) => {\n    email = event.target.value\n  }\n\n\n  return (\n    <div>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        Forgot Password?\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Reset password</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To request password reset to this website, please enter your email address here. We will send a email\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"email\"\n            onChange={e => {\n              e.preventDefault()\n              changeTextValue(e)\n            }}\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Request\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default RequestResetPasswordDialog","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport Layout from '../../components/Layout/Layout';\nimport { menus } from '../../config/menus';\nimport { colors } from '../../config/colors'\nimport useForm from 'react-hook-form';\nimport FormInputs from '../../components/FormInputs/FormInputs';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { Title, Form, Error } from './styles';\nimport { CircularProgress, Box } from '@material-ui/core';\nimport { navigate } from 'hookrouter';\nimport { Authentication } from '../../graphql/mutations/authentication'\nimport { GetUserByToken } from '../../graphql/mutations/user'\nimport { useMutation } from '@apollo/react-hooks';\nimport { authenticate } from '../../duck/actions/authAction'\nimport { setUser } from '../../duck/actions/userAction'\nimport RequestResetPasswordDialog from '../../components/RequestResetPasswordDialog/RequestResetPasswordDialog';\n\n\nconst LoginContent = (props) => {\n    const [errorAuth, setErrorAuth] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [getUserByToken, { user }] = useMutation(GetUserByToken, {\n        onCompleted: (resp) => {\n            props.setUser(resp.getUserByToken);\n        },\n        onError: (error) => {\n            console.log('error', error)\n        }\n    });\n    const [authentication, { data }] = useMutation(Authentication, {\n        onCompleted: (resp) => props.authenticate(resp),\n        onError: (error) => {\n            if (error.graphQLErrors) {\n                setErrorAuth(error.graphQLErrors[0].message);\n            } else {\n                setErrorAuth('Sorry! Your credentials have one problem, please contact suport')\n            }\n            setLoading(false);\n            localStorage.setItem('token', \"\");\n            navigate('/login');\n        }\n    })\n    const { register, handleSubmit, errors } = useForm(); // initialise the hook\n    const onSubmit = formData => {\n        setLoading(true)\n        authentication({ variables: { email: formData.email, password: formData.password } })\n    };\n    useEffect(() => {\n        if (localStorage.getItem('token') !== \"\" && localStorage.getItem('token') !== null) {\n            getUserByToken({\n                variables: {\n                    token: localStorage.getItem('token').split(' ')[1]\n                }\n            })\n            setLoading(false)\n            navigate('/hackathons')\n        }\n    }, [props.token]);\n    return (\n        <Container maxWidth=\"sm\">\n            <Title>Login</Title>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <FormInputs\n                    ncols={['12', '12']}\n                    properties={[\n                        {\n                            id: \"email\",\n                            name: 'email',\n                            label: 'Email',\n                            inputRef: register,\n                            validation: {\n                                required: 'Required email',\n                                pattern: {\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                    message: \"Invalid email address\"\n                                }\n                            },\n                            error: errors\n                        },\n                        {\n                            id: \"password\",\n                            name: 'password',\n                            label: 'Password',\n                            inputRef: register,\n                            validation: {\n                                required: 'Required password'\n                            },\n                            error: errors,\n                            type: \"password\"\n                        }\n\n                    ]}\n                />\n                {errorAuth !== \"\" ? <Error>{errorAuth}</Error> : <React.Fragment />}\n                <h5>Not on Hackathon  yet? <a href=\"/register\" >Register</a></h5>\n                <Box mb={3} >\n                    <RequestResetPasswordDialog {...props}/>\n                </Box>\n                <Button variant=\"contained\" type='submit' >\n                    {loading ? <CircularProgress disableShrink /> : \"Login\"}\n                </Button>\n            </Form>\n\n        </Container>\n    );\n}\nconst Login = (props) => {\n    return (<Layout\n        backgroundColor=\"#66B9BF\"\n        withAppBar={true}\n        menus={menus}\n        withMenu={false}\n        paddinTopMenu=\"5vh\"\n        colors={colors}\n        textTopMenu=\"\"\n        logo=\"https://www.trzcacak.rs/myfile/full/316-3169204_angry-panda-logo.png\"\n        logoTxt=\"Panda\"\n        logoStyle={{ width: '10%', height: '20%' }}\n        withLogout={false}\n        content={<LoginContent {...props} />}\n\n    />);\n}\n\nconst mapStateToProps = state => ({\n    token: state.auth.token\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ authenticate, setUser }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import { gql } from 'apollo-boost';\n\nexport const GetUserById = gql`\nquery ($id: ID!){\n        user(where: {id: $id}){\n        id\n        name\n        email\n        type\n        expertise\n    }\n}\n`","import styled from 'styled-components';\n\nexport const Avatar = styled.img`\n\n`;\nexport const Center = styled.div`\n  display: flex;\n  flex-direction: column;\n  width:100%;\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  width: 50%;\n`;\nexport const StyledDropZone = styled.div`\n  margin: 10;\n  width: 15vw;\n  height: 35vh;\n  border: 2px solid #c6c6c6;\n  border-style: dashed;\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nexport const SnackbarContentWrapper = (props) => {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nSnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\n","import React, { useState, useEffect } from 'react';\nimport { useMutation, useQuery} from '@apollo/react-hooks';\nimport { GetUserById } from '../../graphql/queries/user'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport useForm from 'react-hook-form';\nimport { TextField, Button, CircularProgress, Container } from '@material-ui/core';\nimport { Avatar, StyledDropZone } from './styles';\nimport FormInputs from '../../components/FormInputs/FormInputs';\nimport Dropzone from '../../components/Dropzone/Dropzone';\nimport { toBase64 } from '../../utils/utils';\nimport { setUser } from '../../duck/actions/userAction'\nimport { UpdateUser } from '../../graphql/mutations/user'\nimport LoadingOverlay from 'react-loading-overlay';\nimport {SnackbarContentWrapper} from '../../components/Snackbar';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nconst ProfileContent = (props) => {\n    const [image, setImage] = useState('');\n    const [expertises, setExpertises] = useState([]);\n    const [validateExpertises, setValidateExpertises] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(true);\n    const [openSnackBar, setOpenSnackBar] = useState({open:false,type:\"info\",message:\"\"});\n    const { register, handleSubmit, setValue, errors, getValues } = useForm({mode: 'onSubmit'});\n    const [updateUser] = useMutation(UpdateUser, {\n        onCompleted: (resp) => {\n            props.setUser({ ...resp.updateUser, id: props.user.id, email: props.user.email });\n            setIsLoading(false);\n            setOpenSnackBar({open:true, type:'success',message:\"The profile updated with success!\"})\n        },\n        onError: (error) => {\n            setIsLoading(false);\n            setOpenSnackBar({open:true, type:'error',message:\"Error on update profile!\"})\n        }\n    });\n    const mountObjectToSubmit = () => {\n        let userToUpdate = {}\n        for (var field in getValues()) {\n            if (field == \"password\" && getValues()[field] !== getValues()['repeatPassword']) {\n                setValue(field, '')\n                setValue('repeatPassword', '')\n            }\n            if (getValues()[field] !== \"\" && getValues()[field] !== undefined) {\n\n                userToUpdate[field] = getValues()[field];\n            }\n        }\n        if (expertises !== \"\" && expertises !== undefined) {\n            userToUpdate['expertise'] = expertises;\n        }\n        if (props.user.id) {\n            userToUpdate['id'] = props.user.id;\n        }\n        setIsLoading(true);\n        delete userToUpdate.email\n        return userToUpdate\n    }\n    const onSubmit = async data => {\n        console.log({ ...data, avatar: image ? await toBase64(image) : \"\" })\n        updateUser({ variables:  mountObjectToSubmit() })\n    };\n    const getUser = useQuery(GetUserById,{ variables:{ id: props.user.id }});\n    useEffect(() => {\n        if(getUser && getUser.data && getUser.data.user){\n            setValue('name', getUser.data.user.name)\n            setValue('email', getUser.data.user.email)\n            setExpertises(getUser.data.user.expertise)\n            setValue('expertise', expertises)\n        } else {\n            setValue('name', 'Loading...')\n            setValue('email', 'Loading...')\n            setValue('expertise', [])\n        }\n       setIsLoading(false);\n    }, [getUser])\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setOpenSnackBar({open:false, type:'info',message:\"\"});\n      }\n    // input to dropzone save <input type=\"hidden\" name=\"avatar\" ref={register} />\n    return (     \n        <LoadingOverlay\n            active={isLoading}\n            spinner\n            text='Loading...'\n        >\n            <Snackbar\n                anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n                }}\n                open={openSnackBar.open}\n                autoHideDuration={3000}\n                onClose={handleClose}\n            >\n            <SnackbarContentWrapper\n                onClose={handleClose}\n                variant={openSnackBar.type}\n                message={openSnackBar.message}\n            />\n            </Snackbar>\n            <div>\n                <h1>Profile</h1>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <Dropzone reg={register} image={setImage} />\n                    <input type=\"hidden\" name=\"avatar\" ref={register} />\n                    <img style={{ width: '150px', height: '150px' }} src={`https://api.adorable.io/avatars/285/${props.user.id}@adorable.io.png`} />\n                    <FormInputs\n                        ncols={['6', '4', '4', '4', '4']}\n                        properties={[\n                            {\n                                id: \"name\",\n                                name: 'name',\n                                label: 'Name',\n                                inputRef: register,\n                                validation: {},\n                                error: errors\n                            },\n                            {\n                                id: \"email\",\n                                name: 'email',\n                                label: 'Email',\n                                inputRef: register,\n                                validation: {},\n                                error: errors,\n                                disabled: true\n                            },\n                            {\n                                id: \"password\",\n                                name: 'password',\n                                label: 'Password',\n                                inputRef: register,\n                                validation: {},\n                                error: errors,\n                                type: \"password\"\n                            },\n                            {\n                                id: \"repeatPassword\",\n                                name: 'repeatPassword',\n                                label: 'Repeat Password',\n                                inputRef: register,\n                                validation: {},\n                                error: errors,\n                                type: \"password\"\n                            },\n                            {\n                                id: \"expertise\",\n                                name: 'expertise',\n                                label: 'Your Expertise?',\n                                inputRef: register,\n                                required: true,\n                                type: \"select-multiple\",\n                                validateMessage: validateExpertises,\n                                options: ['IT', 'DESIGN', 'BUSINESS', 'OTHERS'],\n                                setMultipleSelect: setExpertises,\n                                defaultValueMultiple: expertises\n\n\n\n                            }\n                        ]}\n                    />\n                    <input type=\"hidden\" name=\"expertise\" ref={register} />\n                    <Button variant=\"contained\" type='submit' >save</Button>\n                </form>\n            </div >\n        </LoadingOverlay>\n    );\n}\n\nconst mapStateToProps = state => ({\n    user: state.user.user\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ setUser }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContent)\n\n","import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport Layout from '../../components/Layout/Layout';\nimport { menus } from '../../config/menus';\nimport { colors } from '../../config/colors'\nimport ProfileContent from '../../components/ProfileContent';\nimport AuthComponent from '../../components/AuthComponent/AuthComponent'\nconst Profile = (props) => {\n    return (\n        <AuthComponent>\n            <Layout\n                withAppBar={true}\n                menus={menus}\n                withMenu\n                paddinTopMenu=\"5vh\"\n                colors={colors}\n                textTopMenu=\"\"\n                logo=\"\"\n                logoTxt=\"Mr Higgs\"\n                withLogout={true}\n                logoStyle={{ width: '10%', height: '20%' }}\n                content={<ProfileContent />\n                }\n            />\n        </AuthComponent>\n    );\n}\nconst mapStateToProps = state => ({})\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)\n\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { ButtonBase } from '@material-ui/core';\nimport { navigate } from 'hookrouter';\n\nconst styles = {\n  card: {\n    maxWidth: 345,\n    height:  450\n  },\n  media: {\n    height: 140,\n  },\n  cardActionArea: {\n    height: 450 \n  },\n};\n\nlet CardHackathon = (props) => {\n\n  const { classes } = props;\n  const description = props.data.description.length < 150 ? props.data.description : props.data.description.slice(0, 150) + '...'\n  return (\n    <Card className={classes.card}>\n      <ButtonBase onClick={() => { navigate(`/hackathons/details/${props.data.id}`) }}>\n        <CardActionArea >\n          <CardHeader title={\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              <strong>{props.data.name}</strong>\n            </Typography>}\n          />\n          <CardMedia\n            className={classes.media}\n            image=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ8N8XJovpunyzfzzKGpx1298XWO2TNUpyNcL98HfEJsEM2OG-1\"\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent pt={2}>\n            <Typography component=\"p\">\n              <strong>Description:</strong>{description}\n            </Typography>\n          </CardContent>\n          <Box fontWeight=\"fontWeightBold\" pb={2} pl={2}>\n            Participants: {props.data.participants.length}\n          </Box>\n        </CardActionArea>\n      </ButtonBase>\n    </Card>\n  );\n}\n\nCardHackathon.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  user: state.user.user\n})\nCardHackathon = connect(mapStateToProps, undefined)(CardHackathon);\nexport default withStyles(styles)(CardHackathon);","import { gql } from 'apollo-boost';\n\nexport const getHackathons = gql`\nquery($start: DateTime, $end:DateTime, $user: ID) {\n  hackathons(where: {\n    start: $start,\n    end: $end\n  }) {\n    id\n    name\n    description\n    start\n    end\n    participants{\n      id\n    }\n    maxParticipants\n    type\n    createdAt\n  }\n  user(where: {id: $user}){\n    id\n    name\n    email\n    type\n    expertise\n    squads{\n      id\n      hackathon{\n        id\n      }\n    }\n    participant{\n      id\n    }\n    createdHackathon{\n      id\n    }\n    createdAt\n    updatedAt\n  }\n}\n`\nexport const GET_TERM_BY_HACKATHON_ID = gql`\nquery($id: ID!) {\n  hackathon(where: { id: $id }) {\n    terms{\n      id\n      name\n      content\n    }\n  }\n}\n`\nexport const GET_HACKATHON_BY_ID = gql`\nquery($id: ID!) {\n  hackathon(where: { id: $id }) {\n    id\n    name\n    start\n    end\n    description\n    maxParticipants\n    participants{\n      id\n    }\n    squads{\n      id\n    }\n    terms{\n      id\n      name\n      content\n    }\n    award{\n      id\n      name\n      description\n    }\n\n  }\n}\n`","const CHANGED_HACKATHONS = \"CHANGED_HACKATHONS\"\nconst SET_HACKATHON = 'SET_HACKATHON'\n\nexport default {\n    CHANGED_HACKATHONS,\n    SET_HACKATHON\n}","import hackathonType from '../types/hackathonType'\n\nexport const changeHackathon = (data) => {\n    return {\n        type: hackathonType.CHANGED_HACKATHONS,\n        payload: data\n    }\n}\n\nexport const setHackathon = (data) => {\n    return {\n        type: hackathonType.SET_HACKATHON,\n        payload: data\n    }\n}","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport HackathonCard from './HackathonCard'\nimport { getHackathons } from '../../graphql/queries/hackathons'\nimport { changeHackathon } from '../../duck/actions/hackathonAction'\nimport { setUser } from '../../duck/actions/userAction'\n\nimport { Grid, Container, CircularProgress, Box } from '@material-ui/core';\n\nconst HackathonList = (props) => {\n    const { loading, error, data } = useQuery(getHackathons, { variables: { user: props.user.id } });\n    useEffect(() => {\n        if (data && data.hackathons) props.changeHackathon(data.hackathons)\n        if (data && data.user) props.setUser(data.user)\n    }, [data])\n    if (loading) {\n        return <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '100vh' }}><Grid item xs={3}><CircularProgress disableShrink /></Grid></Grid>\n    }\n    return (\n        <div>\n            <Box display=\"flex\" justifyContent=\"center\">\n                <h1>Hackathons</h1>\n            </Box>\n            <Container>\n                <Grid container spacing=\"5\">\n                    {props.hackathons.map(card => {\n                        return (\n                            <Grid item xs={12} sm={12} lg={3} xl={3} key={card.name}>\n                                <HackathonCard data={card} />\n                            </Grid>\n                        );\n                    })\n                    }\n                </Grid>\n            </Container>\n\n\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    hackathons: state.hackathon.hackathons,\n    user: state.user.user\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeHackathon, setUser }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(HackathonList)","import React, { useEffect } from 'react';\nimport { bindActionCreators } from 'redux'\nimport { checkToken } from '../../duck/actions/authAction'\nimport { connect } from 'react-redux'\nimport Layout from '../../components/Layout/Layout';\nimport HackathonList from '../../components/Hackathon/HackathonList'\nimport AuthComponent from '../../components/AuthComponent/AuthComponent'\nimport { menus } from '../../config/menus';\nimport { colors } from '../../config/colors';\n\nconst Hackathons = (props) => {\n    return (\n        <AuthComponent>\n            <Layout\n                withAppBar={true}\n                menus={menus}\n                withMenu\n                paddinTopMenu=\"5vh\"\n                colors={colors}\n                textTopMenu=\"\"\n                logo=\"https://www.trzcacak.rs/myfile/full/316-3169204_angry-panda-logo.png\"\n                logoTxt=\"Panda\"\n                logoStyle={{ width: '10%', height: '20%' }}\n                content={<HackathonList {...props} />\n                }\n            />\n        </AuthComponent>\n    );\n}\nconst mapStateToProps = state => ({\n    checkedToken: state.auth.checkedToken\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ checkToken }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Hackathons)\n","import gql from \"graphql-tag\";\n\nexport const SUBSCRIBE_HACKATHON = gql`\nmutation subscribeHackathon($hackathonId: ID!, $participantId: ID!) {\n  updateHackathon(data: {\n    participants: {connect: {\n      id: $participantId\n    }}\n  }, \n  where: {\n    id: $hackathonId\n  }){\n    id\n    name\n    start\n    end\n    description\n    maxParticipants\n    participants{\n      id\n    }\n    squads{\n      id\n    }\n  }\n}\n`\n\nexport const UNSUBSCRIBE_HACKATHON = gql`\nmutation unsubscribeHackathon($hackathonId: ID!, $participantId: ID!) {\n  updateHackathon(data: {\n    participants: {disconnect: [{\n      id: $participantId\n    }]}\n  }, \n  where: {\n    id: $hackathonId\n  }){\n    id\n    name\n    start\n    end\n    description\n    maxParticipants\n    participants{\n      id\n    }\n    squads{\n      id\n    }\n  }\n}\n`\n\n\nexport const UPDATE_HACKATHON = gql`\n  mutation ($id: ID!, $name: String, $description: String, $start: DateTime!, $end: DateTime!, $maxParticipants: Int){\n    updateHackathon(data: {\n      name: $name\n      description: $description\n      start: $start\n      end: $end\n      maxParticipants: $maxParticipants\n      type: PUBLIC\n    }, where:{id:$id}){\n      id\n      name\n      start\n      end\n      maxParticipants\n      createdBy{\n        email\n        name\n        id\n        expertise\n      }\n    }\n  }\n`","import React, { useState, useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { setHackathon } from '../../../duck/actions/hackathonAction'\nimport useForm from 'react-hook-form';\nimport { Button } from '@material-ui/core';\nimport FormInputs from '../../FormInputs/FormInputs';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { SnackbarContentWrapper } from '../../Snackbar';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { UPDATE_HACKATHON } from '../../../graphql/mutations/hackathon'\nimport { GET_HACKATHON_BY_ID } from '../../../graphql/queries/hackathons'\nimport * as moment from 'moment';\n\nconst HackathonEdit = (props) => {\n    const { data } = useQuery(GET_HACKATHON_BY_ID, { variables: { id: props.hackathon.id } })\n    const [isLoading, setIsLoading] = useState(true);\n    const [openSnackBar, setOpenSnackBar] = useState({ open: false, type: \"info\", message: \"\" });\n    const [startDate, setStartDate] = useState(new Date());\n    const [validateStart, setValidateStart] = useState(\"\");\n    const [validateEnd, setValidateEnd] = useState(\"\");\n    const [endDate, setEndDate] = useState(moment());\n    const { register, handleSubmit, setValue, errors, getValues } = useForm({ mode: 'onSubmit' });\n    const [updateHackathon] = useMutation(UPDATE_HACKATHON, {\n        onCompleted: (resp) => {\n            props.setHackathon({ ...resp.updateHackathon, id: props.hackathon.id, name: props.hackathon.name });\n            setIsLoading(false);\n            setOpenSnackBar({ open: true, type: 'success', message: \"hackathon updated with success!\" })\n        },\n        onError: (error) => {\n            setIsLoading(false);\n            setOpenSnackBar({ open: true, type: 'error', message: \"Error on update hackathon!\" })\n        }\n    });\n    useEffect(() => {\n        console.log('hack', data)\n        if (data && data.hackathon) {\n            setValue('name', data.hackathon.name)\n            setValue('description', data.hackathon.description)\n            setStartDate(data.hackathon.start)\n            setEndDate(data.hackathon.end)\n            setValue('start', data.hackathon.start)\n            setValue('end', data.hackathon.end)\n            setIsLoading(false);            \n        }\n        setIsLoading(false);\n    }, [data])\n    const mountHackatonToUpdate = (submited) => {\n        let hackathonToUpdate = {}\n        for(let i in submited) {\n           //if(submited[i] !== data.hackathon[i] ){\n                hackathonToUpdate[i] = submited[i]\n          // } \n        }\n        hackathonToUpdate['id'] = props.hackathon.id;\n        return hackathonToUpdate\n    }\n    const onSubmit = async data => {\n        if(startDate === null){\n            setValidateStart(\"Please insert a valid date!\")\n        }\n         if(endDate === null){\n            setValidateStart(\"Please insert a valid date!\")\n        }\n        updateHackathon({ variables: mountHackatonToUpdate({...data,start:startDate,end:endDate}) })\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnackBar({ open: false, type: 'info', message: \"\" });\n    }\n    return (\n        <LoadingOverlay\n            active={isLoading}\n            spinner\n            text='Loading...'\n        >\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                open={openSnackBar.open}\n                autoHideDuration={3000}\n                onClose={handleClose}\n            >\n                <SnackbarContentWrapper\n                    onClose={handleClose}\n                    variant={openSnackBar.type}\n                    message={openSnackBar.message}\n                />\n            </Snackbar>\n            <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <img style={{ width: '100%', height: '200px', border: '2px dashed #c6c6c6' }} src={`https://source.unsplash.com/800x200/?programmer`} />\n                    <FormInputs\n                        ncols={['7','10','5','5']}\n                        properties={[\n                            {\n                                id: \"name\",\n                                name: 'name',\n                                label: 'Name',\n                                inputRef: register,\n                                validation: {\n                                    required: 'Required name'\n                                 },\n                                error: errors\n                            },\n                            {\n                                id: \"description\",\n                                name: 'description',\n                                label: 'Description',\n                                inputRef: register,\n                                type:'text-area',\n                                rows: 6,\n                                validation: {},\n                                error: errors\n                            },\n                            {\n                                id: \"start\",\n                                name: 'start',\n                                label: 'Start Event',\n                                inputRef: register,\n                                type:'date-time',\n                                setDate: setStartDate,\n                                validateMessage: validateStart ,\n                                error: errors,\n                                defaultValueDateStart: startDate\n                            },\n                            {\n                                id: \"end\",\n                                name: 'end',\n                                label: 'End Event',\n                                inputRef: register,\n                                type:'date-time',\n                                setDate: setEndDate,\n                                validateMessage: validateEnd ,\n                                error: errors,\n                                defaultValueDateEnd: endDate\n                            }\n                        ]}\n                    />\n                    <br/>\n                    <Button variant=\"outlined\" type='submit' >save</Button>\n                </form>\n            </div >\n        </LoadingOverlay>\n    );\n}\n\nconst mapStateToProps = state => ({\n    hackathon: state.hackathon.hackathon,\n    user: state.user.user\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ setHackathon }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(HackathonEdit)\n\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { ButtonBase } from '@material-ui/core';\nimport { navigate } from 'hookrouter';\nimport ReactHtmlParser from 'react-html-parser';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = {\n\n};\n\nlet CardHackathonTerm = (props) => {\n  const { classes } = props;\n  const content = props.termProps.content.length < 150 ? props.termProps.content : props.termProps.content.slice(0, 150) + '...'\n  return (\n    <React.Fragment>\n        <Box component=\"div\" display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\"  m={2} >\n          <Box display=\"flex\"  justifyContent=\"center\" m={2} >\n          </Box>\n          <Box display=\"flex\"  justifyContent=\"center\" m={2}>\n            <h1>{props.termProps.name}</h1>\n          </Box>\n          <Box display=\"flex\"  justifyContent=\"center\" m={2} >\n            <IconButton color=\"inherit\" onClick={() => { \n                props.setTerm(props.termProps);\n                props.setViewTerm('edit');\n            }}><EditOutlinedIcon fontSize=\"large\"/></IconButton>\n            <IconButton color=\"inherit\" onClick={()=>{}} >\n              <DeleteOutlineOutlinedIcon fontSize=\"large\"/>\n            </IconButton>\n        </Box>\n        </Box>\n        <Divider /> \n   </React.Fragment>\n  );\n}\n\nCardHackathonTerm.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  user: state.user.user\n})\nCardHackathonTerm = connect(mapStateToProps, undefined)(CardHackathonTerm);\nexport default withStyles(styles)(CardHackathonTerm);","import gql from \"graphql-tag\";\n\nexport const UPDATE_TERM = gql`\nmutation ($name: String!, $content: String!, $term: ID!){\n    updateTerm(data: {\n      name: $name\n      content: $content\n    }, where: {\n      id: $term\n    }){\n      id\n      name\n      content\n  }\n}\n`\nexport const CREATE_TERM = gql`\nmutation ($name: String!, $content: String!, $hackathon: ID!){\n    createTerm(data: {\n      name: $name\n      content: $content\n      hackathon: { connect: { id: $hackathon } }\n    }){\n      id\n      name\n      content\n      hackathon {\n        id\n      }\n  }\n}\n`","import React, { useState, useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { setHackathon } from '../../../duck/actions/hackathonAction';\nimport useForm from 'react-hook-form';\nimport { Button } from '@material-ui/core';\nimport FormInputs from '../../FormInputs/FormInputs';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { SnackbarContentWrapper } from '../../Snackbar';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { UPDATE_TERM } from '../../../graphql/mutations/terms';\nimport { EditorState, convertToRaw, convertFromRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nimport * as moment from 'moment';\n\nconst HackathonTermEdit = (props) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [editorState,setEditorState] = useState(EditorState.createEmpty());\n    const [content,setContent] = useState({});\n    const [openSnackBar, setOpenSnackBar] = useState({ open: false, type: \"info\", message: \"\" });\n    \n    const { register, handleSubmit, setValue, errors, getValues } = useForm({ mode: 'onSubmit' });\n    const [updateTerm] = useMutation(UPDATE_TERM, {\n        onCompleted: (resp) => {\n            setIsLoading(false);\n            setOpenSnackBar({ open: true, type: 'success', message: \"Term updated with success!\" })\n        },\n        onError: (error) => {\n            console.log(error)\n            setIsLoading(false);\n            setOpenSnackBar({ open: true, type: 'error', message: \"Error on update term!\" })\n        }\n    });\n    useEffect(() => {\n        if (props.term) {\n            console.log(props.term.id)\n             setValue('name', props.term.name);\n             updateEditorFromHtml(getHtmlFromProps());          \n        }\n        setIsLoading(false);\n    }, [])\n    \n    \n    const getHtmlFromEditor = () =>{\n        const contentHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n        return contentHtml ;\n    }\n    const getHtmlFromProps = () =>{\n        return props.term.content ;\n    }\n    const updateEditorFromHtml = (content) => {\n        const contentBlocksFromHtml = htmlToDraft(content);\n        const { contentBlocks, entityMap } = contentBlocksFromHtml;\n        const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\n        setEditorState(EditorState.createWithContent(contentState));\n    }\n    const onSubmit = async data => {\n        setIsLoading(true);\n        updateTerm({variables: {...data,content:getHtmlFromEditor(),term:props.term.id}})\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnackBar({ open: false, type: 'info', message: \"\" });\n    }\n    const handleEditorState = (e) => {\n        setEditorState(e)\n    }\n    return (\n        <LoadingOverlay\n            active={isLoading}\n            spinner\n            text='Loading...'\n        >\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                open={openSnackBar.open}\n                autoHideDuration={3000}\n                onClose={handleClose}\n            >\n                <SnackbarContentWrapper\n                    onClose={handleClose}\n                    variant={openSnackBar.type}\n                    message={openSnackBar.message}\n                />\n            </Snackbar>\n            <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                <FormInputs\n                        ncols={['6']}\n                        properties={[\n                            {\n                                id: \"name\",\n                                name: 'name',\n                                label: 'Name',\n                                inputRef: register,\n                                validation: {\n                                    required: 'Required name'\n                                 },\n                                error: errors\n                            }\n                        ]}\n                    />\n                    <br/>\n                    <div style={{height:'100%'}}>\n                        <Editor toolbarClassName=\"toolbarClassName\"\n                            editorState={editorState}\n                            wrapperClassName=\"wrapperClassName\"\n                            editorClassName=\"editorClassName\"\n                            onEditorStateChange={(e)=>handleEditorState(e)} />\n                    </div> \n                    <div>\n                        <Button variant=\"outlined\" type='submit' >save</Button> <Button variant=\"outlined\" type='button' onClick={()=>{props.setViewTerm('list')}} >back</Button>\n                    </div>                   \n                </form>\n            </div >\n        </LoadingOverlay>\n    );\n}\n\nconst mapStateToProps = state => ({\n    hackathon: state.hackathon.hackathon,\n    user: state.user.user\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ setHackathon }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(HackathonTermEdit)\n\n","import React, { useState, useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n//import { setTerms } from '../../../duck/actions/termAction';\nimport useForm from 'react-hook-form';\nimport { Button } from '@material-ui/core';\nimport FormInputs from '../../FormInputs/FormInputs';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { SnackbarContentWrapper } from '../../Snackbar';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { CREATE_TERM } from '../../../graphql/mutations/terms';\nimport { GET_TERM_BY_HACKATHON_ID } from '../../../graphql/queries/hackathons'\nimport { EditorState, convertToRaw, convertFromRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport * as moment from 'moment';\n\nconst HackathonTermCreate = (props) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [editorState,setEditorState] = useState(EditorState.createEmpty());\n    const [content,setContent] = useState({});\n    const [openSnackBar, setOpenSnackBar] = useState({ open: false, type: \"info\", message: \"\" });\n    const { register, handleSubmit, setValue, errors, getValues } = useForm({ mode: 'onSubmit' });\n    const [createTerm] = useMutation(CREATE_TERM, {\n        onCompleted: (resp) => {\n            setIsLoading(false);\n            props.setTerms([...props.terms,resp.createTerm]);\n            setOpenSnackBar({ open: true, type: 'success', message: \"Term created with success!\" })\n        },\n        onError: (error) => {\n            setIsLoading(false);\n            setOpenSnackBar({ open: true, type: 'error', message: \"Error on create term!\" })\n        }\n    });\n    useEffect(() => {\n        setIsLoading(false);\n    }, [])\n    \n    \n    const getHtmlFromEditor = () =>{\n        const contentHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n        return contentHtml ;\n    }\n   \n    const onSubmit = async data => {\n        setIsLoading(true);\n        createTerm({variables: {...data,content:getHtmlFromEditor(), hackathon:props.hackathon.id}})\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnackBar({ open: false, type: 'info', message: \"\" });\n    }\n    const handleEditorState = (e) => {\n        setEditorState(e)\n    }\n    return (\n        <LoadingOverlay\n            active={isLoading}\n            spinner\n            text='Loading...'\n        >\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                open={openSnackBar.open}\n                autoHideDuration={3000}\n                onClose={handleClose}\n            >\n                <SnackbarContentWrapper\n                    onClose={handleClose}\n                    variant={openSnackBar.type}\n                    message={openSnackBar.message}\n                />\n            </Snackbar>\n            <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                <FormInputs\n                        ncols={['6']}\n                        properties={[\n                            {\n                                id: \"name\",\n                                name: 'name',\n                                label: 'Name',\n                                inputRef: register,\n                                validation: {\n                                    required: 'Required name'\n                                 },\n                                error: errors\n                            }\n                        ]}\n                    />\n                    <br/>\n                    <div style={{height:'100%'}}>\n                        <Editor toolbarClassName=\"toolbarClassName\"\n                            editorState={editorState}\n                            wrapperClassName=\"wrapperClassName\"\n                            editorClassName=\"editorClassName\"\n                            onEditorStateChange={(e)=>handleEditorState(e)} />\n                    </div> \n                    <div>\n                        <Button variant=\"outlined\" type='submit' >save</Button> <Button variant=\"outlined\" type='button' onClick={()=>{props.setViewTerm('list'); }} >back</Button>\n                    </div>                   \n                </form>\n            </div >\n        </LoadingOverlay>\n    );\n}\n\nconst mapStateToProps = state => ({\n    hackathon: state.hackathon.hackathon,\n    user: state.user.user\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(HackathonTermCreate)\n\n","import React, { useState, useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { setHackathon } from '../../../duck/actions/hackathonAction'\nimport LoadingOverlay from 'react-loading-overlay';\nimport { GET_TERM_BY_HACKATHON_ID } from '../../../graphql/queries/hackathons'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { Grid, Container, CircularProgress, Box } from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport AddCircleOutlinedIcon from '@material-ui/icons/AddCircleOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport  CardHackathonTerm  from './HackathonTermCard';\nimport HackathonTermEdit from './HackathonTermEdit';\nimport HackathonTermCreate from './HackathonTermCreate';\nimport DeleteTermDialog from './DeleteTermDialog';\nimport useForceUpdate from 'use-force-update';\nimport * as moment from 'moment';\n\nconst HackathonTermList = (props) => {\n    const { data, refetch } = useQuery(GET_TERM_BY_HACKATHON_ID, { variables: { id: props.hackathon.id } })\n    const [isLoading, setIsLoading] = useState(true);\n    const [terms,setTerms] = useState([]);\n    const [viewTerm,setViewTerm] = useState(\"list\");\n    const [term,setTerm] = useState(null);\n    const forceUpdate = useForceUpdate();\n   \n    useEffect(() => {\n        if (data && data.hackathon && data.hackathon.terms) {\n           console.log('terms',data.hackathon.terms)\n           setTerms(data.hackathon.terms)\n           setIsLoading(false);        \n        }\n        setIsLoading(false);\n    }, [data,props.terms])\n\n    //  useEffect(() => {\n    //     if(deleteTerm !== null){\n    //         deleteTerm(true)\n    //     }\n    // }, [deleteTerm])\n\n    \n    return (\n        <LoadingOverlay\n            active={isLoading}\n            spinner\n            text='Loading...'\n        >\n        <Box display=\"flex\" justifyContent=\"flex-end\"  >\n         <IconButton color=\"inherit\" onClick={()=>{setViewTerm('create')}} ><AddCircleOutlinedIcon fontSize=\"large\"/></IconButton></Box>\n            <div>\n             { viewTerm === 'list' ? \n                terms.map(termProps => <CardHackathonTerm termProps={termProps} terms={terms} setViewTerm={setViewTerm} setTerm={setTerm} />)\n                :\n                term !== null && viewTerm === 'edit'  ?\n                    <HackathonTermEdit term={term} setViewTerm={setViewTerm} terms={terms} setTerms={setTerms} />\n                :\n                    <HackathonTermCreate setViewTerm={setViewTerm} terms={terms} setTerms={setTerms} />\n            }\n            </div>\n        </LoadingOverlay>\n    );\n}\n\nconst mapStateToProps = state => ({\n    hackathon: state.hackathon.hackathon,\n    user: state.user.user,\n    terms: state.term.terms\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ setHackathon }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(HackathonTermList)\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HackathonEdit from '../HackathonEdit/HackathonEdit';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport HackathonTermList from '../HackathonTermEdit/HackathonTermList';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`horizontal-tabpanel-${index}`}\n      aria-labelledby={`horizontal-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `horizontal-tab-${index}`,\n    'aria-controls': `horizontal-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    flexDirection: 'column',\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex'\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`\n  },\n  tabPanel: {\n    width: '70vw'\n  }\n}));\n\nexport default function HackathonTabsOwner() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        fullWidth={true}\n        orientation=\"horizontal\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Horizontal tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label=\"Edit\" {...a11yProps(0)} />\n        <Tab label=\"Squads\" {...a11yProps(1)} />\n        <Tab label=\"Terms\" {...a11yProps(2)} />\n        <Tab label=\"Awards\" {...a11yProps(3)} />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <HackathonEdit />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        \n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <HackathonTermList />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Awards\n      </TabPanel>\n    </div>\n  );\n}","import React from 'react'\n\nexport default (props) => {\n    if(!props.hidden) {\n        return props.children\n    } else {\n        return false\n    }\n}","import React, { useEffect } from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { setUser, subscribeUserHackathon } from '../../duck/actions/userAction'\nimport { useMutation } from '@apollo/react-hooks';\nimport { SUBSCRIBE_HACKATHON } from '../../graphql/mutations/hackathon'\nimport { Button } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\n\nconst HackathonButtonSubscribe = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    }\n    const [subscribeHackathon] = useMutation(SUBSCRIBE_HACKATHON, {\n        variables: { hackathonId: props.hackathon.id, participantId: props.user.id },\n        onCompleted(data) {\n            props.subscribeUserHackathon(data.updateHackathon.id)\n        },\n        onError(error) {\n            console.log(error)\n        }\n    })\n    const handleOpen = () => {\n        if (props.hackathon.terms.length > 0) setOpen(true);\n        else subscribeHackathon()\n    }\n    const accept = () => {\n        setOpen(false)\n        subscribeHackathon()\n    }\n    return (\n        <div>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-terms\"\n                aria-describedby=\"alert-dialog-terms-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Are you accept hackathon terms and conditions?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-terms-description\">\n                        <div className={classes.root}>\n                            {props.hackathon.terms.map(term => {\n                                return (\n                                    <ExpansionPanel>\n                                        <ExpansionPanelSummary\n                                            expandIcon={<ExpandMoreIcon />}\n                                            aria-controls=\"panel1a-content\"\n                                            id={term.id}\n                                        >\n                                            <Typography className={classes.heading}>{term.name}</Typography>\n                                        </ExpansionPanelSummary>\n                                        <ExpansionPanelDetails>\n                                            <Typography>\n                                                {term.content}\n                                            </Typography>\n                                        </ExpansionPanelDetails>\n                                    </ExpansionPanel>\n                                )\n                            })}\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Disagree\n                </Button>\n                    <Button onClick={accept} color=\"primary\" autoFocus>\n                        Agree\n                </Button>\n                </DialogActions>\n            </Dialog>\n            <Button variant=\"outlined\" color=\"primary\" onClick={e => {\n                e.preventDefault();\n                handleOpen()\n            }}>Subscribe</Button>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ subscribeUserHackathon, setUser }, dispatch)\nexport default connect(undefined, mapDispatchToProps)(HackathonButtonSubscribe)\n\n","import React, { useEffect } from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { changeHackathon } from '../../duck/actions/hackathonAction'\nimport { useMutation } from '@apollo/react-hooks';\nimport { UNSUBSCRIBE_HACKATHON } from '../../graphql/mutations/hackathon'\nimport { Button } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\n\nconst HackathonButtonUnsubscribe = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    }\n    const [unsubscribeHackathon] = useMutation(UNSUBSCRIBE_HACKATHON, {\n        variables: { hackathonId: props.hackathon.id, participantId: props.user.id },\n        onCompleted(data) {\n            props.changeHackathon(data.updateHackathon)\n        },\n        onError(error) {\n            console.log(error)\n        }\n    })\n    const handleOpen = () => {\n        setOpen(true);\n    }\n    const accept = () => {\n        setOpen(false)\n        unsubscribeHackathon()\n    }\n    return (\n        <div>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-terms\"\n                aria-describedby=\"alert-dialog-terms-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Are you sure?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-terms-description\">\n                        SOME TEXT\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Disagree\n                    </Button>\n                    <Button onClick={accept} color=\"primary\" autoFocus>\n                        Agree\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Button variant=\"outlined\" color=\"secondary\" onClick={e => {\n                e.preventDefault();\n                handleOpen()\n            }}>Unsubscribe</Button>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ changeHackathon }, dispatch)\nexport default connect(undefined, mapDispatchToProps)(HackathonButtonUnsubscribe)\n\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\nimport Hidden from '../hidden'\nimport HackathonButtonSubscribe from './HackathonButtonSubscribe'\nimport HackathonButtonUnsubscribe from './HackathonButtonUnsubscribe'\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n}));\n\nconst HackathonInfo = (props) => {\n    const classes = useStyles();\n    let isSubscribe = props.hackathon.participants.filter(participant => participant.id === props.user.id).length > 0\n    useEffect(() => {\n        isSubscribe = props.hackathon.participants.filter(participant => participant.id === props.user.id).length > 0\n    }, [props.hackathon])\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    {props.hackathon.name}\n                </Typography>\n                <Box m={5}>\n                    <img\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ8N8XJovpunyzfzzKGpx1298XWO2TNUpyNcL98HfEJsEM2OG-1\"\n                        title=\"Contemplative Reptile\"\n                    />\n                </Box>\n                <Typography component=\"p\">\n                    {props.hackathon.description}\n                </Typography>\n                <Box mt={3}>\n                    <Typography component=\"p\">\n                        {props.hackathon.participants.length} participants in {props.hackathon.squads.length} squads\n                    </Typography>\n                </Box>\n                <Box mt={3}>\n                    <Hidden hidden={isSubscribe}>\n                        <HackathonButtonSubscribe {...props} />\n                    </Hidden>\n                    <Hidden hidden={!isSubscribe}>\n                        <HackathonButtonUnsubscribe {...props} />\n                    </Hidden>\n                </Box >\n            </Paper>\n        </div>\n    );\n}\n\nexport default HackathonInfo","import React from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\n\nconst TermsCollapseList = (props) => {\n    const classes = useStyles();\n    return props.hackathon.terms.map(term => {\n        return (\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id={term.id}\n                >\n                    <Typography className={classes.heading}>{term.name}</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Typography>\n                        {term.content}\n                    </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        )\n    })\n}\n\nexport default (TermsCollapseList)","import React from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\n\nconst AwardCollapseList = (props) => {\n    const classes = useStyles();\n    return props.hackathon.award.map(award => {\n        return (\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id={award.id}\n                >\n                    <Typography className={classes.heading}>{award.name}</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Typography>\n                        {award.content}\n                    </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        )\n    })\n}\n\nexport default (AwardCollapseList)","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport HackathonInfo from '../HackathonInfo'\nimport TermsCollapseList from '../../Terms/TermsCollapseList';\nimport AwardsCollapseList from '../../Awards/AwardsCollapseList';\nimport Hidden from '../../hidden'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst checkUserIsInSquad = ({ user, hackathon }) => {\n  return user.squads.filter(squad => squad.hackathon.id === hackathon.id).length > 0\n}\n\nconst HackathonTabsParticipant = (props) => {\n  let isInSquad = false;\n  if (props.hackathon) isInSquad = checkUserIsInSquad(props)\n  let disableAward = props.hackathon.award.length === 0\n  let disableTerm = props.hackathon.terms.length === 0\n  let isSubscribe = props.hackathon.participants.filter(participant => participant.id === props.user.id).length > 0\n  useEffect(() => {\n    isSubscribe = props.hackathon.participants.filter(participant => participant.id === props.user.id).length > 0\n    disableAward = props.hackathon.award.length === 0\n    disableTerm = props.hackathon.terms.length === 0\n    if (props.hackathon) isInSquad = checkUserIsInSquad(props)\n  }, [props.hackathon])\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"\"\n        >\n          <Tab label=\"info\" {...a11yProps(0)} />\n          <Tab disabled={!isSubscribe} label=\"Squad\" {...a11yProps(1)} />\n          <Tab label=\"Score\" {...a11yProps(2)} />\n          <Tab disabled={disableTerm} label=\"Terms\" {...a11yProps(3)} />\n          <Tab disabled={disableAward} label=\"Awards\" {...a11yProps(4)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <HackathonInfo {...props} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Hidden hidden={!isInSquad}>\n          isInQuad\n        </Hidden>\n        <Hidden hidden={isInSquad}>\n          Squad\n        </Hidden>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Score\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <TermsCollapseList {...props} />\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        <AwardsCollapseList {...props} />\n      </TabPanel>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  hackathon: state.hackathon.hackathon,\n  user: state.user.user\n})\nexport default connect(mapStateToProps, undefined)(HackathonTabsParticipant)\n","import React, { useEffect } from 'react';\nimport { GET_HACKATHON_BY_ID } from '../../../graphql/queries/hackathons'\nimport { useQuery } from '@apollo/react-hooks';\nimport { bindActionCreators } from 'redux'\nimport { setHackathon } from '../../../duck/actions/hackathonAction'\nimport { setUser } from '../../../duck/actions/userAction'\nimport { connect } from 'react-redux'\nimport { navigate } from 'hookrouter'\nimport LoadingOverlay from 'react-loading-overlay';\nimport HackathonTabsOwner from '../HackathonTabs/HackathonTabsOwner'\nimport HackathonTabsParticipant from '../HackathonTabs/HackathonTabsParticipant'\n\nconst isHackathonCreator = (props) => {\n    return props.user.createdHackathon.filter(created => created.id === props.user.id).length > 0\n}\n\nconst HackathonTabs = (props) => {\n    const id = props.id;\n    const { loading, error, data } = useQuery(GET_HACKATHON_BY_ID, { variables: { id } });\n    let isHackathonOwner = false;\n    useEffect(() => {\n        if (data && data.hackathon) props.setHackathon(data.hackathon)\n        if (props.user.createdHackathon) isHackathonOwner = isHackathonCreator(props)\n    }, [data])\n    useEffect(() => {\n        if (error) navigate('/hackathons')\n    }, [error])\n    if (loading) return <LoadingOverlay active={true} spinner text='Loading...' ><div style={{ width: '100vw', height: '100vh' }}></div></LoadingOverlay>\n    else if (1==1) {\n        window.history.pushState(\"\", \"\", \"/hackathons/edit/\"+id);\n        return <HackathonTabsOwner />\n    } \n    return <HackathonTabsParticipant />\n}\nconst mapStateToProps = state => ({\n    hackathon: state.hackathon.hackathon,\n    user: state.user.user\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ setHackathon, setUser }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(HackathonTabs)\n\n","import React, { useEffect } from 'react';\nimport { bindActionCreators } from 'redux'\nimport { checkToken } from '../../../duck/actions/authAction'\nimport { connect } from 'react-redux'\nimport Layout from '../../../components/Layout/Layout';\nimport AuthComponent from '../../../components/AuthComponent/AuthComponent'\nimport { menus } from '../../../config/menus';\nimport { colors } from '../../../config/colors';\nimport HackathonTabs from '../../../components/Hackathon/HackathonTabs/HackathonTabs';\n\nconst HackathonDetails = (props) => {\n    return (\n        <AuthComponent>\n            <Layout\n                withAppBar={true}\n                menus={menus}\n                withMenu\n                paddinTopMenu=\"5vh\"\n                colors={colors}\n                textTopMenu=\"\"\n                logo=\"https://www.trzcacak.rs/myfile/full/316-3169204_angry-panda-logo.png\"\n                logoTxt=\"Panda\"\n                logoStyle={{ width: '10%', height: '20%' }}\n                content={<HackathonTabs {...props}/> }\n            />\n        </AuthComponent>\n    );\n}\nconst mapStateToProps = state => ({\n    checkedToken: state.auth.checkedToken\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ checkToken }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(HackathonDetails)\n","import React, { useEffect } from 'react';\nimport { bindActionCreators } from 'redux'\nimport { checkToken } from '../../../duck/actions/authAction'\nimport { connect } from 'react-redux'\nimport Layout from '../../../components/Layout/Layout';\nimport HackathonTabsOwner from '../../../components/Hackathon/HackathonTabs/HackathonTabsOwner'\nimport AuthComponent from '../../../components/AuthComponent/AuthComponent'\nimport { menus } from '../../../config/menus';\nimport { colors } from '../../../config/colors';\n\nconst HackathonEdit = (props) => {\n    return (\n        <AuthComponent>\n            <Layout\n                withAppBar={true}\n                menus={menus}\n                withMenu\n                paddinTopMenu=\"5vh\"\n                colors={colors}\n                textTopMenu=\"\"\n                logo=\"https://www.trzcacak.rs/myfile/full/316-3169204_angry-panda-logo.png\"\n                logoTxt=\"Panda\"\n                logoStyle={{ width: '10%', height: '20%' }}\n                content={<HackathonTabsOwner />\n                }\n            />\n        </AuthComponent>\n    );\n}\nconst mapStateToProps = state => ({\n    checkedToken: state.auth.checkedToken\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ checkToken }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(HackathonEdit)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n};\n\nfunction CardSquad(props) {\n  const { classes } = props;\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ8N8XJovpunyzfzzKGpx1298XWO2TNUpyNcL98HfEJsEM2OG-1\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            <strong>{props.data.name}</strong>\n          </Typography>\n          <Typography component=\"p\">\n            <strong>Description:</strong>{props.data.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nCardSquad.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CardSquad);","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { GetUserByToken } from '../../graphql/mutations/user'\nimport { bindActionCreators } from 'redux'\nimport { checkToken } from '../../duck/actions/authAction'\nimport { navigate } from 'hookrouter'\nimport { connect } from 'react-redux'\nimport Layout from '../../components/Layout/Layout';\nimport { menus } from '../../config/menus';\nimport { colors } from '../../config/colors'\nimport CardSquad from '../../components/Squad/CardSquad';\nimport { Grid, CircularProgress, Container } from '@material-ui/core';\nconst SquadsContent = (props) => {\n    const teste = [\n        { name: 'Equipe 01', description: 'askasojasojasojasoj' },\n        { name: 'Equipe 02', description: 'askasojasoj' },\n        { name: 'Equipe 01', de3cription: 'askasojasojasojasoj' },\n        { name: 'Equipe 04', description: 'askasojasojasojasoj' },\n        { name: 'Hackathon Shift', description: 'askasojasojasojasoj' },\n        { name: 'Hackathon Shift', description: 'askasojasojasojasoj' },\n        { name: 'Hackathon Shift', description: 'askasojasojasojasoj' },\n        { name: 'Hackathon Shift', description: 'askasojasojasojasoj' },\n        { name: 'Hackathon Shift', description: 'askasojasojasojasoj' },\n        { name: 'Hackathon Shift', description: 'askasojasojasojasoj' },\n        { name: 'Hackathon Shift', description: 'askasojasojasojasoj' },\n        { name: 'Hackathon Shift', description: 'askasojasojasojasoj' }\n    ]\n    return (\n        <div>\n            <h1>Squads</h1>\n            <Grid container spacing=\"3\">\n                {teste.map(card => {\n                    return (\n\n                        <Grid item xs=\"12\" sm=\"12\" lg=\"4\" xl=\"4\" key={card.name}>\n                            <CardSquad data={card} />\n                        </Grid>\n\n                    );\n\n                })\n                }\n\n\n            </Grid>\n\n        </div>\n    );\n}\nconst Squads = (props) => {\n    const [checkToken, { data }] = useMutation(GetUserByToken, {\n        onCompleted: (resp) => props.checkToken(resp.getUserByToken),\n        onError: (error) => { localStorage.setItem('token', \"\"); }\n    })\n    useEffect(() => {\n        if (localStorage.getItem('token') !== \"\" && localStorage.getItem('token') !== null) {\n            checkToken({ variables: { token: localStorage.getItem('token').split(' ')[1] } });\n        } else {\n            navigate('/login')\n        }\n    }, [props.checkedToken])\n    if (props.checkedToken)\n        return <Layout\n            withAppBar={true}\n            menus={menus}\n            withMenu\n            paddinTopMenu=\"5vh\"\n            colors={colors}\n            textTopMenu=\"\"\n            logo=\"https://www.trzcacak.rs/myfile/full/316-3169204_angry-panda-logo.png\"\n            logoTxt=\"Panda\"\n            logoStyle={{ width: '10%', height: '20%' }}\n            content={<SquadsContent {...props} />\n            }\n        />\n    return <Container><CircularProgress disableShrink /></Container>\n\n\n}\nconst mapStateToProps = state => ({\n    checkedToken: state.auth.checkedToken\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ checkToken }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Squads)\n\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { GetUserByToken } from '../../graphql/mutations/user'\nimport { bindActionCreators } from 'redux'\nimport { checkToken } from '../../duck/actions/authAction'\nimport { navigate } from 'hookrouter'\nimport { connect } from 'react-redux'\nimport Layout from '../../components/Layout/Layout';\nimport { menus } from '../../config/menus';\nimport { colors } from '../../config/colors'\nimport { CircularProgress, Container } from '@material-ui/core';\nconst AwardsContent = (props) => {\n    return (\n        <div><h1>Awards</h1></div>\n    );\n}\nconst Awards = (props) => {\n    const [checkToken, { data }] = useMutation(GetUserByToken, {\n        onCompleted: (resp) => props.checkToken(resp.getUserByToken),\n        onError: (error) => { localStorage.setItem('token', \"\"); }\n    })\n    useEffect(() => {\n        if (localStorage.getItem('token') !== \"\" && localStorage.getItem('token') !== null) {\n            checkToken({ variables: { token: localStorage.getItem('token').split(' ')[1] } });\n        } else {\n            navigate('/login')\n        }\n    }, [props.checkedToken])\n    if (props.checkedToken)\n        return <Layout\n            withAppBar={true}\n            menus={menus}\n            withMenu\n            paddinTopMenu=\"5vh\"\n            colors={colors}\n            textTopMenu=\"\"\n            logo=\"https://www.trzcacak.rs/myfile/full/316-3169204_angry-panda-logo.png\"\n            logoTxt=\"Panda\"\n            logoStyle={{ width: '10%', height: '20%' }}\n            content={<AwardsContent {...props} />\n            }\n        />\n    return <Container><CircularProgress disableShrink /></Container>\n}\nconst mapStateToProps = state => ({\n    checkedToken: state.auth.checkedToken\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ checkToken }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Awards)\n\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { GetUserByToken } from '../../graphql/mutations/user'\nimport { bindActionCreators } from 'redux'\nimport { checkToken } from '../../duck/actions/authAction'\nimport { navigate } from 'hookrouter'\nimport { connect } from 'react-redux'\nimport Layout from '../../components/Layout/Layout';\nimport { menus } from '../../config/menus';\nimport { colors } from '../../config/colors'\nimport { CircularProgress, Container } from '@material-ui/core';\nconst TermsContent = (props) => {\n    return (\n        <div><h1>Terms</h1></div>\n    );\n}\nconst Terms = (props) => {\n    const [checkToken, { data }] = useMutation(GetUserByToken, {\n        onCompleted: (resp) => props.checkToken(resp.getUserByToken),\n        onError: (error) => { localStorage.setItem('token', \"\"); }\n    })\n    useEffect(() => {\n        if (localStorage.getItem('token') !== \"\" && localStorage.getItem('token') !== null) {\n            checkToken({ variables: { token: localStorage.getItem('token').split(' ')[1] } });\n        } else {\n            navigate('/login')\n        }\n    }, [props.checkedToken])\n    if (props.checkedToken)\n        return <Layout\n            withAppBar={true}\n            menus={menus}\n            withMenu\n            paddinTopMenu=\"5vh\"\n            colors={colors}\n            textTopMenu=\"\"\n            logo=\"https://www.trzcacak.rs/myfile/full/316-3169204_angry-panda-logo.png\"\n            logoTxt=\"Panda\"\n            logoStyle={{ width: '10%', height: '20%' }}\n            content={<TermsContent {...props} />\n            }\n        />\n    return <Container><CircularProgress disableShrink /></Container>\n}\nconst mapStateToProps = state => ({\n    checkedToken: state.auth.checkedToken\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ checkToken }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Terms)\n\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { GetUserByToken } from '../../graphql/mutations/user'\nimport { bindActionCreators } from 'redux'\nimport { checkToken } from '../../duck/actions/authAction'\nimport { navigate } from 'hookrouter'\nimport { connect } from 'react-redux'\nimport Layout from '../../components/Layout/Layout';\nimport { menus } from '../../config/menus';\nimport { colors } from '../../config/colors'\nimport { BarChart } from \"reaviz\";\nimport { AreaChart } from 'reaviz';\nimport { CircularProgress, Container } from '@material-ui/core';\nconst ReportsContent = (props) => {\n  const data = [\n    { key: 'IDS', data: 14 },\n    { key: 'Malware', data: 5 },\n    { key: 'DLP', data: 18 }\n  ];\n  const data2 = [\n    { key: new Date(), data: 10 }\n  ];\n  return (\n    <div>\n      <h1>Reports</h1>\n      <BarChart width={350} height={250} data={data} />\n      <AreaChart\n        width={250}\n        height={250}\n        data={data2}\n      />\n    </div>\n  );\n}\nconst Reports = (props) => {\n  const [checkToken, { data }] = useMutation(GetUserByToken, {\n    onCompleted: (resp) => props.checkToken(resp.getUserByToken),\n    onError: (error) => { localStorage.setItem('token', \"\"); }\n  })\n  useEffect(() => {\n    if (localStorage.getItem('token') !== \"\" && localStorage.getItem('token') !== null) {\n      checkToken({ variables: { token: localStorage.getItem('token').split(' ')[1] } });\n    } else {\n      navigate('/login')\n    }\n  }, [props.checkedToken])\n  if (props.checkedToken)\n    return <Layout\n      withAppBar={true}\n      menus={menus}\n      withMenu\n      paddinTopMenu=\"5vh\"\n      colors={colors}\n      textTopMenu=\"\"\n      logo=\"https://www.trzcacak.rs/myfile/full/316-3169204_angry-panda-logo.png\"\n      logoTxt=\"Panda\"\n      logoStyle={{ width: '10%', height: '20%' }}\n      content={<ReportsContent {...props} />\n      }\n    />\n  return <Container><CircularProgress disableShrink /></Container>\n}\nconst mapStateToProps = state => ({\n  checkedToken: state.auth.checkedToken\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ checkToken }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Reports)\n\n","import styled from 'styled-components';\nimport { device } from '../../config/devices';\nexport const Center = styled.div`\n  display: flex;\n  flex-direction: column\n  width:50vw;\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n`;\nexport const Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: #554433\n  width:100%;\n`;\nexport const StyledDropZone = styled.div`\n  margin: 10;\n  width: 15vw;\n  height: 35vh;\n  border: 2px solid #c6c6c6;\n  border-style: dashed;\n`;\nexport const Footer = styled.footer`\ndisplay: flex;\n  margin-top: 2vh;\n  width: 95vw;\n  height: 5vh;\n  border: 2px solid #c6c6c6;\n  border-style: dashed;\n  background-color: #e6e6e6;\n  justify-content: center;\n  font-weight: bold;\n`\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport Layout from '../../components/Layout/Layout';\nimport { menus } from '../../config/menus';\nimport { colors } from '../../config/colors'\nimport useForm from 'react-hook-form';\nimport Input from '@material-ui/core/Input';\nimport FormInputs from '../../components/FormInputs/FormInputs';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { Title, Center, Form, Error } from './styles';\nimport { FormControlLabel, Checkbox, CircularProgress } from '@material-ui/core';\nimport { navigate } from 'hookrouter';\nimport { useMutation } from '@apollo/react-hooks';\nimport { authenticate } from '../../duck/actions/authAction'\nimport { CreateUser } from '../../graphql/mutations/user'\nimport Dropzone from '../../components/Dropzone/Dropzone';\nimport { toBase64 } from '../../utils/utils';\nconst RegisterContent = (props) => {\n    const [image, setImage] = useState('');\n    const [youAre, setYouAre] = useState('');\n    const [expertises, setExpertises] = useState([]);\n    const [isSamePassword, setIsSamePassword] = useState(false);\n    const [validateYouAre, setValidateYouAre] = useState(\"\");\n    const [validateExpertises, setValidateExpertises] = useState(\"\");\n    const [loading, setLoading] = useState(false)\n    const { register, handleSubmit, setValue, errors, getValues, setError } = useForm({\n        mode: 'onSubmit'\n    });\n    const [createUser, { data }] = useMutation(CreateUser, {\n        onCompleted: (resp) => {\n            setLoading(false);\n            if (resp.createUser.id) {\n                alert('User registered')\n                navigate('/')\n            }\n        },\n        onError: (error) => {\n            // setErrorAuth(error.graphQLErrors[0].message);\n            // setLoading(false);\n            // localStorage.setItem('token', \"\");\n            // navigate('/login');\n            console.log(error);\n\n        }\n    })\n    const onSubmit = async data => {\n        if (youAre === \"\" || expertises.length === 0) {\n            if (expertises.length === 0) {\n                setValidateExpertises(\"Please select this!\")\n            }\n            if (youAre === \"\") {\n                setValidateYouAre(\"Please select this!\")\n            }\n            return\n        }\n        console.log('formData', { ...data, expertises: expertises, youAre: youAre, avatar: await toBase64(image) })\n        const usr = { ...data, expertise: expertises, type: youAre }\n        setLoading(true)\n        createUser({ variables: { name: usr.name, email: usr.email, password: usr.password, expertise: usr.expertise, type: usr.type, avatar: await toBase64(image) } })\n    }; // callback when validation pass\n    return (\n        <Container maxWidth=\"sm\">\n            <Title>Informações de Cadastro</Title>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Dropzone reg={register} image={setImage} />\n                <FormInputs\n                    ncols={['12', '12', '6', '6', '6']}\n                    properties={[\n                        {\n                            id: \"name\",\n                            name: 'name',\n                            label: 'Nome',\n                            inputRef: register,\n                            validation: { },\n                            error: errors\n                        },\n                        {\n                            id: \"surname\",\n                            name: 'surname',\n                            label: 'Sobrenome',\n                            inputRef: register,\n                            validation: {},\n                            error: errors\n                        },\n                        {\n                            id: \"cpf\",\n                            name: 'cpf',\n                            label: 'CPF',\n                            inputRef: register,\n                            validation: {},\n                            error: errors\n                        },\n                        {\n                            id: \"rg\",\n                            name: 'rg',\n                            label: 'RG',\n                            inputRef: register,\n                            validation: {},\n                            error: errors,\n                        },\n                        {\n                            id: \"numeroCarteiraDeTrabalho\",\n                            name: 'numeroCarteiraDeTrabalho',\n                            label: 'Número da Carteira de Trabalho',\n                            inputRef: register\n                        }\n                    ]}\n                />\n                <input type=\"hidden\" name=\"youAre\" />\n                <input type=\"hidden\" name=\"expertises\" />\n                <input type=\"hidden\" name=\"avatar\" ref={register} />\n                <h5>Você já tem cadastro? <a href=\"/login\" >Acessar</a></h5>\n                <Button variant=\"contained\" type='submit' >\n                    {loading ? <CircularProgress disableShrink /> : \"Register\"}\n                </Button>\n            </Form>\n        </Container>\n    );\n}\nconst Register = (props) => {\n    return (<Layout\n        backgroundColor=\"\"\n        withAppBar={false}\n        menus={menus}\n        withMenu={false}\n        paddinTopMenu=\"5vh\"\n        colors={colors}\n        textTopMenu=\"Register\"\n        logo=\"https://www.trzcacak.rs/myfile/full/316-3169204_angry-panda-logo.png\"\n        logoTxt=\"Panda\"\n        logoStyle={{ width: '10%', height: '20%' }}\n        withLogout={false}\n        content={<RegisterContent {...props} />}\n\n    />);\n}\n\nconst mapStateToProps = state => ({\n    token: state.auth.token\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ authenticate }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { GetUserByToken } from '../../graphql/mutations/user'\nimport { bindActionCreators } from 'redux'\nimport { checkToken } from '../../duck/actions/authAction'\nimport { navigate } from 'hookrouter'\nimport { connect } from 'react-redux'\nimport Layout from '../../components/Layout/Layout';\nimport { menus } from '../../config/menus';\nimport { colors } from '../../config/colors'\nimport { CircularProgress, Container } from '@material-ui/core';\n\nconst ConfigurationsContent = (props) => {\n    return (\n        <div><h1>Configurations</h1></div>\n    );\n}\nconst Configurations = (props) => {\n    const [checkToken, { data }] = useMutation(GetUserByToken, {\n        onCompleted: (resp) => props.checkToken(resp.getUserByToken),\n        onError: (error) => { localStorage.setItem('token', \"\"); }\n    })\n    useEffect(() => {\n        if (localStorage.getItem('token') !== \"\" && localStorage.getItem('token') !== null) {\n            checkToken({ variables: { token: localStorage.getItem('token').split(' ')[1] } });\n        } else {\n            navigate('/login')\n        }\n    }, [props.checkedToken])\n    if (props.checkedToken)\n        return <Layout\n            withAppBar={true}\n            menus={menus}\n            withMenu\n            paddinTopMenu=\"5vh\"\n            colors={colors}\n            textTopMenu=\"\"\n            logo=\"https://www.trzcacak.rs/myfile/full/316-3169204_angry-panda-logo.png\"\n            logoTxt=\"Panda\"\n            logoStyle={{ width: '10%', height: '20%' }}\n            content={<ConfigurationsContent {...props} />\n            }\n        />\n    return <Container><CircularProgress disableShrink /></Container>\n}\nconst mapStateToProps = state => ({\n    checkedToken: state.auth.checkedToken\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ checkToken }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Configurations)\n\n","import gql from \"graphql-tag\";\n\nexport const CHANGE_PASSWORD = gql`\n    mutation ($token: String! $password: String!) {\n        changePassword(token: $token, newPassword: $password){\n            isChangedPassword\n        }\n    }\n`","import React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport { menus } from '../../config/menus';\nimport { colors } from '../../config/colors';\nimport { navigate } from 'hookrouter';\nimport { useMutation } from '@apollo/react-hooks';\nimport { CHANGE_PASSWORD } from '../../graphql/mutations/changePassword'\nimport { Box, Button, TextField } from '@material-ui/core';\n\nconst ChangePassword = (props) => {\n    let password = ''\n    let token = props.token\n    const [changePassword, { data }] = useMutation(CHANGE_PASSWORD)\n    const changeTextValue = (e) => {\n        password = e.target.value\n    }\n    const onSubmit = () => {\n        if (password) {\n            changePassword({ variables: { token, password } })\n            navigate('/login')\n        }\n    };\n    return (\n        <div>\n            <Box mt={15} cols={3} display=\"flex\" justifyContent=\"center\">\n                <TextField\n                    autoFocus\n                    margin=\"password\"\n                    id=\"password\"\n                    onChange={e => {\n                        e.preventDefault()\n                        changeTextValue(e)\n                    }}\n                    label=\"new password\"\n                    type=\"password\"\n                />\n            </Box>\n\n            <Box mt={2} display=\"flex\" justifyContent=\"center\">\n                <Button onClick={onSubmit} variant=\"contained\">\n                    change\n                </Button>\n            </Box>\n        </div>\n    )\n}\nconst ChangePasswordView = (props) => {\n    return (<Layout\n        backgroundColor=\"#66B9BF\"\n        withAppBar={true}\n        menus={menus}\n        withMenu={false}\n        paddinTopMenu=\"5vh\"\n        colors={colors}\n        textTopMenu=\"\"\n        logo=\"https://www.trzcacak.rs/myfile/full/316-3169204_angry-panda-logo.png\"\n        logoTxt=\"Panda\"\n        logoStyle={{ width: '10%', height: '20%' }}\n        withLogout={false}\n        content={<ChangePassword {...props} />}\n\n    />);\n}\n\nexport default (ChangePasswordView)\n","import React from 'react'\nimport Home from '../views/Home/Home'\nimport Login from '../views/Login/Login'\nimport Profile from '../views/Profile/Profile'\nimport Hackathons from '../views/Hackathons/Hackathons'\nimport HackathonDetails from '../views/Hackathons/Details/HackathonDetails'\nimport HackathonEdit from '../views/Hackathons/Edit/HackathonEdit'\nimport Squads from '../views/Squads/Squads'\nimport Awards from '../views/Awards/Awards'\nimport Terms from '../views/Terms/Terms'\nimport Reports from '../views/Reports/Reports'\nimport Register from '../views/Register/Register'\nimport Configurations from '../views/Configurations/Configurations'\nimport ChangePasswordView from '../views/ChangePasswordView/ChangePasswordView'\n\nexport const routes = {\n    '/login': () => <Login />,\n    '/': () => <Home />,\n    '/profile': () => <Profile />,\n    '/hackathons': () => <Hackathons />,\n    '/hackathons/details/:id': ({ id }) => <HackathonDetails id={id} />,\n    '/change/password/:id': ({ id }) => <ChangePasswordView token={id} />,\n    '/hackathons/edit/:id': ({ id }) => <HackathonDetails id={id} />,\n    '/squads': () => <Squads />,\n    '/awards': () => <Awards />,\n    '/terms': () => <Terms />,\n    '/configurations': () => <Configurations />,\n    '/reports': () => <Reports />,\n    '/register': () => <Register />,\n}","import { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { env } from '../config/enviroment';\nconst httpLink = createHttpLink({\n    uri: env(),\n});\n\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem('token');\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `${token}` : \"\",\n        }\n    }\n});\n\nexport default new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n});","export const env = () => {\n    const data = 'dev';\n    switch (data) {\n        case 'prod':\n            return \"https://backendapollotest.herokuapp.com/\"\n        case 'hml':\n            return \"https://backendapollotest.herokuapp.com/\"\n        case 'dev':\n            return \"https://backendapollotest.herokuapp.com/\"\n        default:\n            return \"https://backendapollotest.herokuapp.com/\"\n    }\n}","import * as AUTH_TYPES from '../types/authType'\nimport { navigate } from 'hookrouter';\n\nconst TOKEN_KEY = 'token'\n\nconst INITIAL_STATE = {\n    token: \"\",\n    error: \"\",\n    checkedToken: false\n}\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case AUTH_TYPES.AUTHENTICATED:\n            localStorage.setItem(TOKEN_KEY, \"Bearer \" + action.payload)\n            return { ...state, token: action.payload, checkedToken: true }\n        case AUTH_TYPES.LOGOUT:\n            localStorage.removeItem(TOKEN_KEY)\n            return { ...state, token: '' }\n        case AUTH_TYPES.IS_VALID_TOKEN:\n            return { ...state, checkedToken: action.payload }\n        case AUTH_TYPES.ERROR:\n            localStorage.removeItem(TOKEN_KEY)\n            return { ...state, error: action.payload }\n        default:\n            return state\n    }\n}","import * as USER_TYPES from '../types/userType'\n\nconst INITIAL_STATE = {\n    user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        participant: [],\n        createdHackathon: [],\n        squads: []\n    }\n}\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case USER_TYPES.SET_USER:\n            return { ...state, user: action.payload }\n        case USER_TYPES.USER_SUBSCRIBE_HACKATHON:\n            return { ...state, user: { participants: [...state.user.participant, { id: action.payload }] } }\n        default:\n            return state\n    }\n}","import * as TERM_TYPES from '../types/termType'\n\nconst INITIAL_STATE = {\n    terms:[]\n}\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case TERM_TYPES.SET_TERMS:\n            return { ...state, terms: action.payload }\n        default:\n            return state\n    }\n}","import hackathonType from '../types/hackathonType'\n\nconst INITIAL_STATE = {\n    hackathons: [],\n    hackathon: {\n        id: 'ck0d3w0z53a1c0b53tm7m46h1',\n        name: '',\n        start: '',\n        end: '',\n        maxParticipants: 0,\n        participants: [],\n        squads: [],\n        terms: [],\n        award: []\n    }\n}\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case hackathonType.SET_HACKATHON:\n            return { ...state, hackathon: action.payload }\n        case hackathonType.CHANGED_HACKATHONS:\n            return { ...state, hackathons: action.payload }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport AuthReducer from './reducers/authReducer'\nimport UserReducer from './reducers/userReducer'\nimport TermReducer from './reducers/termReducer'\nimport HackathonReducer from './reducers/hackathonReducer'\nconst rootReducer = combineReducers({\n    auth: AuthReducer,\n    user: UserReducer,\n    term: TermReducer,\n    hackathon: HackathonReducer\n})\n\nexport default rootReducer","export const SET_TERMS = 'SET_TERMS';","import React from 'react'\n\nimport { useRoutes } from 'hookrouter'\nimport { routes } from './config/routes'\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport client from './graphql/client'\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport promise from 'redux-promise'\nimport multi from 'redux-multi'\nimport thunk from 'redux-thunk'\nimport reducers from './duck/rootReducer'\n\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__\n  && window.__REDUX_DEVTOOLS_EXTENSION__()\nconst store = applyMiddleware(multi, thunk, promise)(createStore)(reducers, devTools)\n\nconst App = () => {\n\n  const routeResult = useRoutes(routes) || <h1>Page not found</h1>\n\n  return (\n    <Provider store={store}>\n      <ApolloProvider client={client}>\n        {routeResult}\n      </ApolloProvider>\n    </Provider>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}